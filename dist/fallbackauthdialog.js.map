{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/msal/lib-es6/Account.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js","webpack:///./node_modules/msal/lib-es6/cache/BrowserStorage.js","webpack:///./node_modules/msal/lib-es6/cache/AuthCache.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js","webpack:///./node_modules/msal/lib-es6/utils/RequestUtils.js","webpack:///./node_modules/msal/lib-es6/ServerRequestParameters.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/msal/lib-es6/error/ClientAuthError.js","webpack:///./node_modules/msal/lib-es6/telemetry/ApiEvent.js","webpack:///./node_modules/msal/lib-es6/IdToken.js","webpack:///./node_modules/msal/lib-es6/Logger.js","webpack:///./node_modules/msal/lib-es6/error/ServerError.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js","webpack:///./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js","webpack:///./node_modules/msal/lib-es6/utils/TimeUtils.js","webpack:///./node_modules/msal/lib-es6/ClientInfo.js","webpack:///./node_modules/msal/lib-es6/utils/UrlUtils.js","webpack:///./node_modules/msal/lib-es6/utils/Constants.js","webpack:///./node_modules/msal/lib-es6/utils/StringUtils.js","webpack:///./node_modules/msal/lib-es6/utils/TokenUtils.js","webpack:///./node_modules/msal/lib-es6/AuthResponse.js","webpack:///./node_modules/msal/lib-es6/error/ClientConfigurationError.js","webpack:///./node_modules/msal/lib-es6/XHRClient.js","webpack:///./node_modules/msal/lib-es6/telemetry/HttpEvent.js","webpack:///./node_modules/msal/lib-es6/utils/ResponseUtils.js","webpack:///./node_modules/msal/lib-es6/utils/CryptoUtils.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenKey.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenValue.js","webpack:///./node_modules/msal/lib-es6/telemetry/DefaultEvent.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryManager.js","webpack:///./node_modules/msal/lib-es6/UserAgentApplication.js","webpack:///./node_modules/msal/lib-es6/Configuration.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js","webpack:///./node_modules/msal/lib-es6/utils/WindowUtils.js","webpack:///./node_modules/msal/lib-es6/error/AuthError.js","webpack:///./node_modules/msal/lib-es6/authority/Authority.js","webpack:///./src/helpers/fallbackauthdialog.ts","webpack:///./node_modules/msal/lib-es6/index.js","webpack:///./node_modules/msal/lib-es6/authority/AadAuthority.js","webpack:///./node_modules/msal/lib-es6/authority/B2cAuthority.js","webpack:///./node_modules/msal/lib-es6/authority/AuthorityFactory.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/msal/lib-es6/ScopeSet.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__spreadArrays","il","k","a","j","jl","Account","accountIdentifier","homeAccountIdentifier","userName","idTokenClaims","sid","environment","idToken","createAccount","clientInfo","objectId","subject","uid","utid","isEmpty","base64Encode","preferredName","claims","issuer","compareAccounts","a1","a2","AccessTokenCacheItem","BrowserStorage","cacheLocation","window","AuthError","createNoWindowObjectError","ClientConfigurationError","createStorageNotSupportedError","setItem","enableCookieStorage","setItemCookie","getItem","getItemCookie","removeItem","clear","cName","cValue","expires","cookieStr","getCookieExpirationTime","document","cookie","ca","split","charAt","substring","clearItemCookie","cookieLifeDays","today","Date","getTime","toUTCString","_super","AuthCache","clientId","storeAuthStateInCookie","_this","rollbackEnabled","migrateCacheEntries","idTokenKey","Constants","cachePrefix","IDTOKEN","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","values","forEach","cacheKey","index","duplicateCacheEntry","newKey","generateCacheKey","addInstanceId","JSON","parse","adalIdToken","state","resetCacheItems","storage","resetTempCacheItems","tokenRenewalInProgress","clearMsalCookie","INTERACTION_STATUS","REDIRECT_REQUEST","getAllAccessTokens","keys","reduce","tokens","match","scopes","parseAtKey","newAccessTokenCacheItem","concat","ClientAuthError","createCacheParseError","stateValue","renewStatus","RENEW_STATUS","inProgress","NONCE_IDTOKEN","STATE_LOGIN","LOGIN_REQUEST","STATE_ACQ_TOKEN","generateAcquireTokenAccountKey","accountId","ACQUIRE_TOKEN_ACCOUNT","resourceDelimiter","generateAuthorityKey","AUTHORITY","scrubTenantFromUri","uri","url","GetUrlComponents","HostNameAndPort","toLocaleLowerCase","pathParams","PathSegments","tenantPosition","Protocol","join","hashPersonalIdentifier","valueToHash","prependEventNamePrefix","suffix","supportsBrowserPerformance","performance","mark","measure","endBrowserPerformanceMeasurement","measureName","startMark","endMark","clearMeasures","clearMarks","startBrowserPerformanceMeasurement","RequestUtils","validateRequest","request","isLoginCall","interactionType","createEmptyRequestError","extraQueryParameters","appendScopes","extraScopesToConsent","validateInputScope","validatePromptParameter","prompt","validateEQParameters","claimsRequest","validateClaimsRequest","validateAndGenerateState","correlationId","validateAndGenerateCorrelationId","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","createInvalidPromptError","eQParams","param","createClaimsRequestParsingError","userState","generateLibraryState","stateObject","id","createNewGuid","ts","now","method","stateString","stringify","parseLibraryState","libraryState","decodeURIComponent","isGuid","interactionTypeRedirect","base64Decode","createInvalidStateError","createInvalidCorrelationIdError","createRequestSignature","toLowerCase","authority","ServerRequestParameters","responseType","redirectUri","authorityInstance","nonce","slice","trimAndConvertArrayToLowerCase","xClientSku","xClientVer","CanonicalAuthority","configurable","populateQueryParams","account","adalIdTokenObject","silentCall","queryParameters","promptValue","claimsValue","isSSOParam","constructUnifiedCacheQueryParameter","addHintParameters","generateQueryParametersString","idTokenObject","ssoType","ssoData","SID","LOGIN_HINT","loginHint","upn","ID_TOKEN","addSSOParameter","qParams","ssoParam","paramsString","domain_hint","encodeURIComponent","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ClientAuthErrorMessage","multipleMatchingTokens","code","multipleCacheAuthorities","endpointResolutionError","popUpWindowError","tokenRenewalError","invalidIdToken","invalidStateError","nonceMismatchError","loginProgressError","acquireTokenProgressError","userCancelledError","callbackError","userLoginRequiredError","userDoesNotExistError","clientInfoDecodingError","clientInfoNotPopulatedError","nullOrEmptyIdToken","idTokenNotParsed","tokenEncodingError","invalidInteractionType","cacheParseError","blockTokenRequestsInHiddenIframe","errorCode","errorMessage","createEndpointResolutionError","errDetail","createMultipleMatchingTokensInCacheError","scope","createMultipleAuthoritiesInCacheError","createPopupWindowError","createTokenRenewalTimeoutError","createInvalidIdTokenError","invalidState","actualState","createNonceMismatchError","invalidNonce","actualNonce","createLoginInProgressError","createAcquireTokenInProgressError","createUserCancelledError","createErrorInCallbackFunction","errorDesc","createUserLoginRequiredError","createUserDoesNotExistError","createClientInfoDecodingError","caughtError","createClientInfoNotPopulatedError","createIdTokenNullOrEmptyError","invalidRawTokenString","createIdTokenParsingError","caughtParsingError","createTokenEncodingError","incorrectlyEncodedToken","createInvalidInteractionTypeError","createBlockTokenRequestsInHiddenIframeError","_a","API_CODE","API_EVENT_IDENTIFIER","EVENT_KEYS","mapEventIdentiferToCode","AcquireTokenSilent","AcquireTokenPopup","AcquireTokenRedirect","LoginPopup","LoginRedirect","Logout","ApiEvent","piiEnabled","apiEventIdentifier","apiCode","set","event","ApiTelemIdConstStrKey","ApiIdConstStrKey","tenantId","wasSuccessful","authorityType","promptType","IdToken","rawIdToken","extractIdToken","expiration","homeObjectId","cloudInstance","LogLevel","Logger","localCallback","options","level","Info","_b","_c","piiLoggingEnabled","logMessage","logLevel","containsPii","log","timestamp","executeCallback","message","error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","isPiiLoggingEnabled","ServerErrorMessage","ServerError","createServerUnavailableError","createUnknownServerError","TelemetryEvent","eventName","eventLabel","eventId","MsalCorrelationIdConstStrKey","setElapsedTime","time","stop","startTimestamp","displayName","perfStartMark","perfEndMark","start","telemetryCorrelationId","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthError","isInteractionRequiredError","errorString","interactionRequiredCodes","createLoginRequiredAuthError","createInteractionRequiredAuthError","createConsentRequiredAuthError","TimeUtils","parseExpiresIn","expiresIn","parseInt","Math","round","ClientInfo","rawClientInfo","decodedClientInfo","_uid","_utid","UrlUtils","createNavigateUrl","serverRequestParams","str","createNavigationUrlString","authEndpoint","AuthorizationEndpoint","translateclientIdUsedInScope","parseScope","clientIdIndex","splice","getCurrentUrl","location","href","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","common","constructAuthorityUriFromObject","CanonicalizeUri","regEx","RegExp","urlComponents","AbsolutePath","pathSegments","filter","val","Search","Hash","endsWith","urlRemoveQueryStringParameter","regex","replace","getHashFromUrl","urlStringOrFragment","hashIndex1","hashIndex2","urlContainsHash","urlString","parameters","deserializeHash","ERROR_DESCRIPTION","ACCESS_TOKEN","urlFragment","hash","deserialize","getHostFromUri","extractedUri","String","ServerHashParamKeys","TemporaryCacheKeys","PersistentCacheKeys","ErrorCacheKeys","_popUpWidth","width","_popUpHeight","height","SSOTypes","AADTrustedHostList","BlacklistedEQParams","PromptState","FramePrefix","ID_TOKEN_FRAME","TOKEN_FRAME","libraryVersion","StringUtils","TokenUtils","decodeJwt","jwtToken","matches","exec","header","JWSPayload","JWSSig","encodedIdToken","decodedToken","base64IdToken","base64Decoded","err","buildResponseStateOnly","uniqueId","tokenType","accessToken","expiresOn","accountState","fromCache","ClientConfigurationErrorMessage","configurationNotSet","storageNotSupported","noRedirectCallbacksSet","invalidCallbackObject","scopesRequired","emptyScopes","nonArrayScopes","clientScope","invalidPrompt","invalidAuthorityType","authorityUriInsecure","authorityUriInvalidPath","unsupportedAuthorityValidation","untrustedAuthority","b2cAuthorityUriInvalidPath","b2cKnownAuthoritiesNotSet","claimsRequestParsingError","emptyRequestError","invalidCorrelationIdError","telemetryConfigError","ssoSilentError","invalidAuthorityMetadataError","createNoSetConfigurationError","givenCacheLocation","createRedirectCallbacksNotSetError","createInvalidCallbackObjectError","callbackObject","createEmptyScopesArrayError","scopesValue","createScopesNonArrayError","createClientIdSingleScopeError","createScopesRequiredError","claimsRequestParseError","createKnownAuthoritiesNotSetError","createInvalidAuthorityTypeError","createUntrustedAuthorityError","createTelemetryConfigError","config","requiredKeys","applicationName","applicationVersion","telemetryEmitter","createSsoSilentError","createInvalidAuthorityMetadataError","XhrClient","sendRequestAsync","enableCaching","xhr","XMLHttpRequest","open","onload","ev","jsonResponse","status","handleError","responseText","response","statusCode","onerror","send","HttpEvent","scrubbedUri","httpPath","userAgent","queryParams","apiVersion","httpMethod","requestIdHeader","speInfo","subErrorCode","ResponseUtils","setResponseIdToken","originalResponse","idTokenObj","exp","Number","CryptoUtils","cryptoObj","crypto","getRandomValues","buffer","Uint8Array","decimalToHex","guidHolder","hex","guidResponse","random","guid","test","num","toString","input","btoa","p1","fromCharCode","encodedString","atob","map","charCodeAt","query","pl","search","decode","obj","AccessTokenKey","AccessTokenValue","DefaultEvent","platform","eventCount","sdk","sdkVersion","networkInformation","connectionSpeed","UiEventCountTelemetryBatchKey","getEventCount","HttpEventCountTelemetryBatchKey","CacheEventCountConstStrKey","TelemetryManager","logger","completedEvents","inProgressEvents","eventCountByCorrelationId","onlySendFailureTelemetry","telemetryPlatform","libraryName","navigator","connection","effectiveType","getTelemetrymanagerStub","startEvent","stopEvent","incrementEventCount","flush","orphanedEvents","getOrphanedEvents","eventsToFlush","eventCountsToFlush","defaultEvent","eventsWithDefaultEvent","createAndStartApiEvent","apiEvent","stopAndFlushApiEvent","apiErrorCode","createAndStartHttpEvent","correlation","httpEvent","memo","eventKey","event_1","ResponseTypes","UserAgentApplication","configuration","authResponseCallback","tokenReceivedCallback","errorReceivedCallback","system","auth","inCookie","cache","telemetryManager","getTelemetryManagerFromConfig","telemetry","setKnownAuthorities","validateAuthority","knownAuthorities","saveMetadataFromConfig","authorityMetadata","cacheStorage","activeRenewals","renewStates","callbackMappedToRenewStates","promiseMappedToRenewStates","msal","urlHash","checkIfBackButtonIsPressed","getResponseState","handleRedirectAuthenticationResponse","CreateInstance","getAuthorityInstance","handleRedirectCallback","authOrTokenCallback","redirectError","authErrorHandler","redirectResponse","authResponseHandler","interactionTypePopup","authErr","loginRedirect","userRequest","acquireTokenInteractive","acquireTokenRedirect","loginPopup","resp","catch","acquireTokenPopup","blockReloadInHiddenIframes","interactionProgress","thrownError","stateOnlyResponse","getAccountState","getAccount","acquireTokenHelper","extractADALIdToken","tokenRequest","buildIDTokenRequest","silentLogin","acquireTokenSilent","serverAuthenticationRequest","acquireTokenAuthority","popUpWindow","loginStartPage","urlNavigate","error_1","err_1","hasCachedMetadata","saveMetadataFromNetwork","getTokenType","redirectStartPage","getRedirectUri","updateCacheEntries","response_mode_fragment","requestType","login","renewToken","registerCallback","openPopup","popUpWidth","popUpHeight","trackPopup","monitorWindowForHash","loadFrameTimeout","handleAuthenticationResponse","framework","isAngular","broadcast","closePopups","close","onRedirectNavigate","navigateWindow","ssoSilent","interactionTypeSilent","requestSignature","userContainedClaims","cacheResultResponse","err_2","forceRefresh","getCachedToken","renewIdToken","res","winLeft","screenLeft","screenX","winTop","screenTop","screenY","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","top_1","popupWindow","focus","loadIframeTimeout","frameName","expectedState","iframe","error_2","navigateFrameWait","loadFrame","loadFrameSync","contentWindow","removeHiddenIframe","createUnexpectedError","logout","logoutAsync","requestCorrelationId","correlationIdParam","postLogoutQueryParam","error_3","clearCache","getPostLogoutRedirectUri","EndSessionEndpoint","accessTokenItems","clearCacheForScope","token","isCallback","processCallBack","stateInfo","parentCallback","saveTokenFromHash","parent","locationHash","tokenResponseCallback","navigateToLoginRequestUrl","loginRequestUrl","currentUrl","finalRedirectUrl","loginRequestUrlComponents","stateResponse","STATE","parsedState","unknown","stateMatch","silentAuthenticationState","statesInParentContext","accessTokenCacheItem","tokenCacheItems","filteredItems","cachedScopes","cacheItem","containsScope","authorityList","getUniqueAuthority","expired","offset","tokenRenewalOffsetSeconds","aState","accessTokenCacheItems","flags","element","generateFrameName","addHiddenIFrame","prompt_none","saveAccessToken","accessTokenResponse","clientObj","SCOPE","consentedScopes","isIntersectingScopes","EXPIRES_IN","accessTokenKey","accessTokenValue","hashParams","authorityKey","acquireTokenAccountKey","LOGIN_ERROR","no_account","hashErr","hashErrDesc","SESSION_STATE","populateAuthority","accountKey","acquireTokenAccountKey_noaccount","cachedAccount","acquireTokenAccount","cachedAuthority","splitIndex","getAllAccounts","accounts","getUniqueAccounts","uniqueAccounts","data","evt","CustomEvent","detail","dispatchEvent","getCachedTokenInternal","accountObject","newAuthority","getScopesForEndpoint","endpoint","unprotectedResources","protectedResourceMap","size","_i","from","getLoginInProgress","setInteractionInProgress","setloginInProgress","loginInProgress","getAcquireTokenInProgress","setAcquireTokenInProgress","acquireTokenInProgress","getLogger","setLogger","reqRedirectUri","postLogoutRedirectUri","getCurrentConfiguration","setAccountCache","getAccountId","setAuthorityCache","telemetryManagerConfig","DEFAULT_AUTH_OPTIONS","DEFAULT_CACHE_OPTIONS","DEFAULT_SYSTEM_OPTIONS","DEFAULT_FRAMEWORK_OPTIONS","Map","buildConfiguration","_d","EVENT_NAME_PREFIX","EVENT_NAME_KEY","START_TIME_KEY","ELAPSED_TIME_KEY","TELEMETRY_BLOB_EVENT_NAMES","BrokerAppConstStrKey","IdpConstStrKey","IsSilentTelemetryBatchKey","IsSuccessfulConstStrKey","ResponseTimeConstStrKey","TenantIdConstStrKey","TENANT_PLACEHOLDER","WindowUtils","isInIframe","isInPopup","opener","prefix","isSilentCall","maxTicks","POLLING_INTERVAL_MS","ticks","intervalId","setInterval","closed","clearInterval","timeoutMs","frameHandle","src","iframeId","adalFrame","getElementById","createElement","ifr","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","insertAdjacentHTML","frames","parentNode","removeChild","getIframeWithHash","iframes","item","getPopups","openedWindows","getPopUpWithHash","popup","redirectCache","splitCache","AuthErrorMessage","errDesc","AuthorityType","Authority","IsValidationEnabled","validateAsUri","tenantDiscoveryResponse","CanonicalAuthorityUrlComponents","validateResolved","Tenant","Issuer","canonicalAuthority","canonicalAuthorityUrlComponents","components","DiscoverEndpoints","openIdConfigurationEndpoint","client","httpResponseStatus","authorization_endpoint","end_session_endpoint","serverErrorCode","resolveEndpointsAsync","openIdConfigurationEndpointResponse","GetOpenIdConfigurationEndpointAsync","Office","initialize","context","ui","messageParent","userAgentApp","authCallback","localStorage","requestObj","Msal","console","AadAuthority","AadInstanceDiscoveryEndpoint","Aad","IsInTrustedHostList","DefaultOpenIdConfigurationEndpoint","AadInstanceDiscoveryEndpointUrl","tenant_discovery_endpoint","host","B2CTrustedHostList","B2cAuthority","B2C","B2C_PREFIX","AuthorityFactory","metadata","metadataMap","getMetadata","authorityUrl","authorityMetadataJson","parsedMetadata","detectAuthorityFromUrl","Adfs","Function","factory","isFunction","x","isArray","vertxNext","customSchedulerFn","asap","callback","arg","scheduleFlush","browserWindow","undefined","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","self","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","channel","iterations","observer","node","onFulfillment","onRejection","child","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","promise","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","vertx","require","runOnLoop","runOnContext","attemptVertx","handleMaybeThenable","maybeThenable","then$$1","thenable","fulfill","reason","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","type","publishRejection","_onerror","publish","_subscribers","subscribers","settled","hasCallback","succeeded","Enumerator","Constructor","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","didError","_settledAt","Promise$1","_willSettleAt","enumerator","resolver","needsResolver","initializePromise","needsNew","finally","all","entries","race","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","polyfill","local","global","promiseToString","cast","ScopeSet","convertedCachedScopes","requestScopes","every","trimAndConvertToLowerCase","trim","removeElement","scopeVal","scopeList","getScopeFromState","reqScopes","reqExtraScopesToConsent","convertedExtraScopes","convertedReqScopes"],"mappings":"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","file":"fallbackauthdialog.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 829);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nvar Account = /** @class */ (function () {\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    function Account(accountIdentifier, homeAccountIdentifier, userName, name, idTokenClaims, sid, environment) {\r\n        this.accountIdentifier = accountIdentifier;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n        this.userName = userName;\r\n        this.name = name;\r\n        // will be deprecated soon\r\n        this.idToken = idTokenClaims;\r\n        this.idTokenClaims = idTokenClaims;\r\n        this.sid = sid;\r\n        this.environment = environment;\r\n    }\r\n    /**\r\n     * @hidden\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    Account.createAccount = function (idToken, clientInfo) {\r\n        // create accountIdentifier\r\n        var accountIdentifier = idToken.objectId || idToken.subject;\r\n        // create homeAccountIdentifier\r\n        var uid = clientInfo ? clientInfo.uid : \"\";\r\n        var utid = clientInfo ? clientInfo.utid : \"\";\r\n        var homeAccountIdentifier;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.preferredName, idToken.name, idToken.claims, idToken.sid, idToken.issuer);\r\n    };\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    Account.compareAccounts = function (a1, a2) {\r\n        if (!a1 || !a2) {\r\n            return false;\r\n        }\r\n        if (a1.homeAccountIdentifier && a2.homeAccountIdentifier) {\r\n            if (a1.homeAccountIdentifier === a2.homeAccountIdentifier) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Account;\r\n}());\r\nexport { Account };\r\n//# sourceMappingURL=Account.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\r\nexport { AccessTokenCacheItem };\r\n//# sourceMappingURL=AccessTokenCacheItem.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { AuthError } from \"../error/AuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(cacheLocation) {\r\n        if (!window) {\r\n            throw AuthError.createNoWindowObjectError(\"Browser storage class could not find window object\");\r\n        }\r\n        var storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n        if (!storageSupported) {\r\n            throw ClientConfigurationError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        this.cacheLocation = cacheLocation;\r\n    }\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        window[this.cacheLocation].setItem(key, value);\r\n        if (enableCookieStorage) {\r\n            this.setItemCookie(key, value);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {\r\n        if (enableCookieStorage && this.getItemCookie(key)) {\r\n            return this.getItemCookie(key);\r\n        }\r\n        return window[this.cacheLocation].getItem(key);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        return window[this.cacheLocation].removeItem(key);\r\n    };\r\n    /**\r\n     * clear storage (remove all items from it)\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        return window[this.cacheLocation].clear();\r\n    };\r\n    /**\r\n     * add value to cookies\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        var cookieStr = cName + \"=\" + cValue + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cName) {\r\n        var name = cName + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === \" \") {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cName) {\r\n        this.setItemCookie(cName, \"\", -1);\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\r\n        return expr.toUTCString();\r\n    };\r\n    return BrowserStorage;\r\n}());\r\nexport { BrowserStorage };\r\n//# sourceMappingURL=BrowserStorage.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Constants, PersistentCacheKeys, TemporaryCacheKeys, ErrorCacheKeys } from \"../utils/Constants\";\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\nimport { BrowserStorage } from \"./BrowserStorage\";\r\nimport { ClientAuthError } from \"../error/ClientAuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar AuthCache = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AuthCache, _super);\r\n    function AuthCache(clientId, cacheLocation, storeAuthStateInCookie) {\r\n        var _this = _super.call(this, cacheLocation) || this;\r\n        _this.clientId = clientId;\r\n        // This is hardcoded to true for now. We may make this configurable in the future\r\n        _this.rollbackEnabled = true;\r\n        _this.migrateCacheEntries(storeAuthStateInCookie);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Support roll back to old cache schema until the next major release: true by default now\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.migrateCacheEntries = function (storeAuthStateInCookie) {\r\n        var _this = this;\r\n        var idTokenKey = Constants.cachePrefix + \".\" + PersistentCacheKeys.IDTOKEN;\r\n        var clientInfoKey = Constants.cachePrefix + \".\" + PersistentCacheKeys.CLIENT_INFO;\r\n        var errorKey = Constants.cachePrefix + \".\" + ErrorCacheKeys.ERROR;\r\n        var errorDescKey = Constants.cachePrefix + \".\" + ErrorCacheKeys.ERROR_DESC;\r\n        var idTokenValue = _super.prototype.getItem.call(this, idTokenKey);\r\n        var clientInfoValue = _super.prototype.getItem.call(this, clientInfoKey);\r\n        var errorValue = _super.prototype.getItem.call(this, errorKey);\r\n        var errorDescValue = _super.prototype.getItem.call(this, errorDescKey);\r\n        var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        var keysToMigrate = [PersistentCacheKeys.IDTOKEN, PersistentCacheKeys.CLIENT_INFO, ErrorCacheKeys.ERROR, ErrorCacheKeys.ERROR_DESC];\r\n        keysToMigrate.forEach(function (cacheKey, index) { return _this.duplicateCacheEntry(cacheKey, values[index], storeAuthStateInCookie); });\r\n    };\r\n    /**\r\n     * Utility function to help with roll back keys\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.duplicateCacheEntry = function (newKey, value, storeAuthStateInCookie) {\r\n        if (value) {\r\n            this.setItem(newKey, value, storeAuthStateInCookie);\r\n        }\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    AuthCache.prototype.generateCacheKey = function (key, addInstanceId) {\r\n        try {\r\n            // Defined schemas do not need the key appended\r\n            JSON.parse(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (key.indexOf(\"\" + Constants.cachePrefix) === 0 || key.indexOf(Constants.adalIdToken) === 0) {\r\n                return key;\r\n            }\r\n            return addInstanceId ? Constants.cachePrefix + \".\" + this.clientId + \".\" + key : Constants.cachePrefix + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.setItem = function (key, value, enableCookieStorage, state) {\r\n        _super.prototype.setItem.call(this, this.generateCacheKey(key, true), value, enableCookieStorage);\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.setItem.call(this, this.generateCacheKey(key, false), value, enableCookieStorage);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.getItem = function (key, enableCookieStorage) {\r\n        return _super.prototype.getItem.call(this, this.generateCacheKey(key, true), enableCookieStorage);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    AuthCache.prototype.removeItem = function (key) {\r\n        _super.prototype.removeItem.call(this, this.generateCacheKey(key, true));\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.removeItem.call(this, this.generateCacheKey(key, false));\r\n        }\r\n    };\r\n    /**\r\n     * Reset the cache items\r\n     */\r\n    AuthCache.prototype.resetCacheItems = function () {\r\n        var storage = window[this.cacheLocation];\r\n        var key;\r\n        for (key in storage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all cache items created by MSAL.js\r\n            if (storage.hasOwnProperty(key) && (key.indexOf(Constants.cachePrefix) !== -1)) {\r\n                _super.prototype.removeItem.call(this, key);\r\n                // TODO: Clear cache based on client id (clarify use cases where this is needed)\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     */\r\n    AuthCache.prototype.resetTempCacheItems = function (state) {\r\n        var storage = window[this.cacheLocation];\r\n        var key;\r\n        // check state and remove associated cache\r\n        for (key in storage) {\r\n            if ((!state || key.indexOf(state) !== -1) && !this.tokenRenewalInProgress(state)) {\r\n                this.removeItem(key);\r\n                this.setItemCookie(key, \"\", -1);\r\n                this.clearMsalCookie(state);\r\n            }\r\n        }\r\n        // delete the interaction status cache\r\n        this.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n        this.removeItem(TemporaryCacheKeys.REDIRECT_REQUEST);\r\n    };\r\n    /**\r\n     * Set cookies for IE\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    AuthCache.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, true), cValue, expires);\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, false), cValue, expires);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    AuthCache.prototype.getItemCookie = function (cName) {\r\n        return _super.prototype.getItemCookie.call(this, this.generateCacheKey(cName, true));\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthCache.prototype.getAllAccessTokens = function (clientId, homeAccountIdentifier) {\r\n        var _this = this;\r\n        var results = Object.keys(window[this.cacheLocation]).reduce(function (tokens, key) {\r\n            var keyMatches = key.match(clientId) && key.match(homeAccountIdentifier) && key.match(Constants.scopes);\r\n            if (keyMatches) {\r\n                var value = _this.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var parseAtKey = JSON.parse(key);\r\n                        var newAccessTokenCacheItem = new AccessTokenCacheItem(parseAtKey, JSON.parse(value));\r\n                        return tokens.concat([newAccessTokenCacheItem]);\r\n                    }\r\n                    catch (e) {\r\n                        throw ClientAuthError.createCacheParseError(key);\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Return if the token renewal is still in progress\r\n     * @param stateValue\r\n     */\r\n    AuthCache.prototype.tokenRenewalInProgress = function (stateValue) {\r\n        var renewStatus = this.getItem(TemporaryCacheKeys.RENEW_STATUS + \"|\" + stateValue);\r\n        return !!(renewStatus && renewStatus === Constants.inProgress);\r\n    };\r\n    /**\r\n     * Clear all cookies\r\n     */\r\n    AuthCache.prototype.clearMsalCookie = function (state) {\r\n        this.clearItemCookie(TemporaryCacheKeys.NONCE_IDTOKEN + \"|\" + state);\r\n        this.clearItemCookie(TemporaryCacheKeys.STATE_LOGIN + \"|\" + state);\r\n        this.clearItemCookie(TemporaryCacheKeys.LOGIN_REQUEST + \"|\" + state);\r\n        this.clearItemCookie(TemporaryCacheKeys.STATE_ACQ_TOKEN + \"|\" + state);\r\n    };\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    AuthCache.generateAcquireTokenAccountKey = function (accountId, state) {\r\n        return \"\" + TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.resourceDelimiter + accountId + Constants.resourceDelimiter + state;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    AuthCache.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.resourceDelimiter + state;\r\n    };\r\n    return AuthCache;\r\n}(BrowserStorage));\r\nexport { AuthCache };\r\n//# sourceMappingURL=AuthCache.js.map","import { AADTrustedHostList } from \"../utils/Constants\";\r\nimport { TENANT_PLACEHOLDER, EVENT_NAME_PREFIX } from \"./TelemetryConstants\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nexport var scrubTenantFromUri = function (uri) {\r\n    var url = UrlUtils.GetUrlComponents(uri);\r\n    // validate trusted host\r\n    if (!AADTrustedHostList[url.HostNameAndPort.toLocaleLowerCase()]) {\r\n        /**\r\n         * returning what was passed because the library needs to work with uris that are non\r\n         * AAD trusted but passed by users such as B2C or others.\r\n         * HTTP Events for instance can take a url to the open id config endpoint\r\n         */\r\n        return uri;\r\n    }\r\n    var pathParams = url.PathSegments;\r\n    if (pathParams && pathParams.length >= 2) {\r\n        var tenantPosition = pathParams[1] === \"tfp\" ? 2 : 1;\r\n        if (tenantPosition < pathParams.length) {\r\n            pathParams[tenantPosition] = TENANT_PLACEHOLDER;\r\n        }\r\n    }\r\n    return url.Protocol + \"//\" + url.HostNameAndPort + \"/\" + pathParams.join(\"/\");\r\n};\r\nexport var hashPersonalIdentifier = function (valueToHash) {\r\n    /*\r\n     * TODO sha256 this\r\n     * Current test runner is being funny with node libs that are webpacked anyway\r\n     * need a different solution\r\n     */\r\n    return CryptoUtils.base64Encode(valueToHash);\r\n};\r\nexport var prependEventNamePrefix = function (suffix) { return \"\" + EVENT_NAME_PREFIX + (suffix || \"\"); };\r\nexport var supportsBrowserPerformance = function () { return !!(typeof window !== \"undefined\" &&\r\n    \"performance\" in window &&\r\n    window.performance.mark &&\r\n    window.performance.measure); };\r\nexport var endBrowserPerformanceMeasurement = function (measureName, startMark, endMark) {\r\n    if (supportsBrowserPerformance()) {\r\n        window.performance.mark(endMark);\r\n        window.performance.measure(measureName, startMark, endMark);\r\n        window.performance.clearMeasures(measureName);\r\n        window.performance.clearMarks(startMark);\r\n        window.performance.clearMarks(endMark);\r\n    }\r\n};\r\nexport var startBrowserPerformanceMeasurement = function (startMark) {\r\n    if (supportsBrowserPerformance()) {\r\n        window.performance.mark(startMark);\r\n    }\r\n};\r\n//# sourceMappingURL=TelemetryUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Constants, PromptState, BlacklistedEQParams } from \"../utils/Constants\";\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { TimeUtils } from \"./TimeUtils\";\r\nimport { ClientAuthError } from \"../error/ClientAuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar RequestUtils = /** @class */ (function () {\r\n    function RequestUtils() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     *\r\n     * @param request\r\n     * @param isLoginCall\r\n     * @param cacheStorage\r\n     * @param clientId\r\n     *\r\n     * validates all request parameters and generates a consumable request object\r\n     */\r\n    RequestUtils.validateRequest = function (request, isLoginCall, clientId, interactionType) {\r\n        // Throw error if request is empty for acquire * calls\r\n        if (!isLoginCall && !request) {\r\n            throw ClientConfigurationError.createEmptyRequestError();\r\n        }\r\n        var scopes;\r\n        var extraQueryParameters;\r\n        if (request) {\r\n            // if extraScopesToConsent is passed in loginCall, append them to the login request; Validate and filter scopes (the validate function will throw if validation fails)\r\n            scopes = isLoginCall ? ScopeSet.appendScopes(request.scopes, request.extraScopesToConsent) : request.scopes;\r\n            ScopeSet.validateInputScope(scopes, !isLoginCall, clientId);\r\n            // validate prompt parameter\r\n            this.validatePromptParameter(request.prompt);\r\n            // validate extraQueryParameters\r\n            extraQueryParameters = this.validateEQParameters(request.extraQueryParameters, request.claimsRequest);\r\n            // validate claimsRequest\r\n            this.validateClaimsRequest(request.claimsRequest);\r\n        }\r\n        // validate and generate state and correlationId\r\n        var state = this.validateAndGenerateState(request && request.state, interactionType);\r\n        var correlationId = this.validateAndGenerateCorrelationId(request && request.correlationId);\r\n        var validatedRequest = tslib_1.__assign({}, request, { extraQueryParameters: extraQueryParameters,\r\n            scopes: scopes,\r\n            state: state,\r\n            correlationId: correlationId });\r\n        return validatedRequest;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Utility to test if valid prompt value is passed in the request\r\n     * @param request\r\n     */\r\n    RequestUtils.validatePromptParameter = function (prompt) {\r\n        if (prompt) {\r\n            if ([PromptState.LOGIN, PromptState.SELECT_ACCOUNT, PromptState.CONSENT, PromptState.NONE].indexOf(prompt) < 0) {\r\n                throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestUtils.validateEQParameters = function (extraQueryParameters, claimsRequest) {\r\n        var eQParams = tslib_1.__assign({}, extraQueryParameters);\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        if (claimsRequest) {\r\n            // this.logger.warning(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\r\n            delete eQParams[Constants.claims];\r\n        }\r\n        BlacklistedEQParams.forEach(function (param) {\r\n            if (eQParams[param]) {\r\n                // this.logger.warning(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n                delete eQParams[param];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Validates the claims passed in request is a JSON\r\n     * TODO: More validation will be added when the server team tells us how they have actually implemented claims\r\n     * @param claimsRequest\r\n     */\r\n    RequestUtils.validateClaimsRequest = function (claimsRequest) {\r\n        if (!claimsRequest) {\r\n            return;\r\n        }\r\n        var claims;\r\n        try {\r\n            claims = JSON.parse(claimsRequest);\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createClaimsRequestParsingError(e);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * generate unique state per request\r\n     * @param userState User-provided state value\r\n     * @returns State string include library state and user state\r\n     */\r\n    RequestUtils.validateAndGenerateState = function (userState, interactionType) {\r\n        return !StringUtils.isEmpty(userState) ? \"\" + RequestUtils.generateLibraryState(interactionType) + Constants.resourceDelimiter + userState : RequestUtils.generateLibraryState(interactionType);\r\n    };\r\n    /**\r\n     * Generates the state value used by the library.\r\n     *\r\n     * @returns Base64 encoded string representing the state\r\n     */\r\n    RequestUtils.generateLibraryState = function (interactionType) {\r\n        var stateObject = {\r\n            id: CryptoUtils.createNewGuid(),\r\n            ts: TimeUtils.now(),\r\n            method: interactionType\r\n        };\r\n        var stateString = JSON.stringify(stateObject);\r\n        return CryptoUtils.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Decodes the state value into a StateObject\r\n     *\r\n     * @param state State value returned in the request\r\n     * @returns Parsed values from the encoded state value\r\n     */\r\n    RequestUtils.parseLibraryState = function (state) {\r\n        var libraryState = decodeURIComponent(state).split(Constants.resourceDelimiter)[0];\r\n        if (CryptoUtils.isGuid(libraryState)) {\r\n            // If state is guid, assume timestamp is now and is redirect, as redirect should be only method where this can happen.\r\n            return {\r\n                id: libraryState,\r\n                ts: TimeUtils.now(),\r\n                method: Constants.interactionTypeRedirect\r\n            };\r\n        }\r\n        try {\r\n            var stateString = CryptoUtils.base64Decode(libraryState);\r\n            var stateObject = JSON.parse(stateString);\r\n            return stateObject;\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, null);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * validate correlationId and generate if not valid or not set by the user\r\n     * @param correlationId\r\n     */\r\n    RequestUtils.validateAndGenerateCorrelationId = function (correlationId) {\r\n        // validate user set correlationId or set one for the user if null\r\n        if (correlationId && !CryptoUtils.isGuid(correlationId)) {\r\n            throw ClientConfigurationError.createInvalidCorrelationIdError();\r\n        }\r\n        return CryptoUtils.isGuid(correlationId) ? correlationId : CryptoUtils.createNewGuid();\r\n    };\r\n    /**\r\n     * Create a request signature\r\n     * @param request\r\n     */\r\n    RequestUtils.createRequestSignature = function (request) {\r\n        return \"\" + request.scopes.join(\" \").toLowerCase() + Constants.resourceDelimiter + request.authority;\r\n    };\r\n    return RequestUtils;\r\n}());\r\nexport { RequestUtils };\r\n//# sourceMappingURL=RequestUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { SSOTypes, Constants, PromptState, libraryVersion } from \"./utils/Constants\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { ScopeSet } from \"./ScopeSet\";\r\n/**\r\n * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken\r\n * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12\r\n * @hidden\r\n */\r\nvar ServerRequestParameters = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param authority\r\n     * @param clientId\r\n     * @param scope\r\n     * @param responseType\r\n     * @param redirectUri\r\n     * @param state\r\n     */\r\n    function ServerRequestParameters(authority, clientId, responseType, redirectUri, scopes, state, correlationId) {\r\n        this.authorityInstance = authority;\r\n        this.clientId = clientId;\r\n        this.nonce = CryptoUtils.createNewGuid();\r\n        // set scope to clientId if null\r\n        this.scopes = scopes ? scopes.slice() : [clientId];\r\n        this.scopes = ScopeSet.trimAndConvertArrayToLowerCase(this.scopes);\r\n        // set state (already set at top level)\r\n        this.state = state;\r\n        // set correlationId\r\n        this.correlationId = correlationId;\r\n        // telemetry information\r\n        this.xClientSku = \"MSAL.JS\";\r\n        this.xClientVer = libraryVersion();\r\n        this.responseType = responseType;\r\n        this.redirectUri = redirectUri;\r\n    }\r\n    Object.defineProperty(ServerRequestParameters.prototype, \"authority\", {\r\n        get: function () {\r\n            return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param request\r\n     * @param serverAuthenticationRequest\r\n     */\r\n    ServerRequestParameters.prototype.populateQueryParams = function (account, request, adalIdTokenObject, silentCall) {\r\n        var queryParameters = {};\r\n        if (request) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (request.prompt) {\r\n                this.promptValue = request.prompt;\r\n            }\r\n            // Add claims challenge to serverRequestParameters if passed\r\n            if (request.claimsRequest) {\r\n                this.claimsValue = request.claimsRequest;\r\n            }\r\n            // if the developer provides one of these, give preference to developer choice\r\n            if (ServerRequestParameters.isSSOParam(request)) {\r\n                queryParameters = this.constructUnifiedCacheQueryParameter(request, null);\r\n            }\r\n        }\r\n        if (adalIdTokenObject) {\r\n            queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);\r\n        }\r\n        /*\r\n         * adds sid/login_hint if not populated\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        queryParameters = this.addHintParameters(account, queryParameters);\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams = request ? request.extraQueryParameters : null;\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams, silentCall);\r\n    };\r\n    // #region QueryParam helpers\r\n    /**\r\n     * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer\r\n     * in any login() or acquireToken() calls\r\n     * @param idTokenObject\r\n     * @param extraQueryParameters\r\n     * @param sid\r\n     * @param loginHint\r\n     */\r\n    // TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.\r\n    ServerRequestParameters.prototype.constructUnifiedCacheQueryParameter = function (request, idTokenObject) {\r\n        // preference order: account > sid > login_hint\r\n        var ssoType;\r\n        var ssoData;\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.sid > account.login_hint\r\n        if (request) {\r\n            if (request.account) {\r\n                var account = request.account;\r\n                if (account.sid) {\r\n                    ssoType = SSOTypes.SID;\r\n                    ssoData = account.sid;\r\n                }\r\n                else if (account.userName) {\r\n                    ssoType = SSOTypes.LOGIN_HINT;\r\n                    ssoData = account.userName;\r\n                }\r\n            }\r\n            // sid from request\r\n            else if (request.sid) {\r\n                ssoType = SSOTypes.SID;\r\n                ssoData = request.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (request.loginHint) {\r\n                ssoType = SSOTypes.LOGIN_HINT;\r\n                ssoData = request.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        else if (idTokenObject) {\r\n            if (idTokenObject.hasOwnProperty(Constants.upn)) {\r\n                ssoType = SSOTypes.ID_TOKEN;\r\n                ssoData = idTokenObject.upn;\r\n            }\r\n        }\r\n        serverReqParam = this.addSSOParameter(ssoType, ssoData);\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * domain_hint if added skips the email based discovery process of the user - only supported for interactive calls in implicit_flow\r\n     * domain_req utid received as part of the clientInfo\r\n     * login_req uid received as part of clientInfo\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     * @ignore\r\n     */\r\n    ServerRequestParameters.prototype.addHintParameters = function (account, qParams) {\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        if (account && !qParams[SSOTypes.SID]) {\r\n            // sid - populate only if login_hint is not already populated and the account has sid\r\n            var populateSID = !qParams[SSOTypes.LOGIN_HINT] && account.sid && this.promptValue === PromptState.NONE;\r\n            if (populateSID) {\r\n                qParams = this.addSSOParameter(SSOTypes.SID, account.sid, qParams);\r\n            }\r\n            // login_hint - account.userName\r\n            else {\r\n                var populateLoginHint = !qParams[SSOTypes.LOGIN_HINT] && account.userName && !StringUtils.isEmpty(account.userName);\r\n                if (populateLoginHint) {\r\n                    qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, account.userName, qParams);\r\n                }\r\n            }\r\n        }\r\n        return qParams;\r\n    };\r\n    /**\r\n     * Add SID to extraQueryParameters\r\n     * @param sid\r\n     */\r\n    ServerRequestParameters.prototype.addSSOParameter = function (ssoType, ssoData, ssoParam) {\r\n        if (!ssoParam) {\r\n            ssoParam = {};\r\n        }\r\n        if (!ssoData) {\r\n            return ssoParam;\r\n        }\r\n        switch (ssoType) {\r\n            case SSOTypes.SID: {\r\n                ssoParam[SSOTypes.SID] = ssoData;\r\n                break;\r\n            }\r\n            case SSOTypes.ID_TOKEN: {\r\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n            case SSOTypes.LOGIN_HINT: {\r\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n        }\r\n        return ssoParam;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerRequestParameters.generateQueryParametersString = function (queryParameters, silentCall) {\r\n        var paramsString = null;\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                // sid cannot be passed along with login_hint or domain_hint\r\n                if (key === Constants.domain_hint && (silentCall || queryParameters[SSOTypes.SID])) {\r\n                    return;\r\n                }\r\n                if (paramsString == null) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerRequestParameters.isSSOParam = function (request) {\r\n        return request && (request.account || request.sid || request.loginHint);\r\n    };\r\n    return ServerRequestParameters;\r\n}());\r\nexport { ServerRequestParameters };\r\n//# sourceMappingURL=ServerRequestParameters.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nexport var ClientAuthErrorMessage = {\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements like authority.\"\r\n    },\r\n    multipleCacheAuthorities: {\r\n        code: \"multiple_authorities\",\r\n        desc: \"Multiple authorities found in the cache. Pass authority in the API overload.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    tokenRenewalError: {\r\n        code: \"token_renewal_error\",\r\n        desc: \"Token renewal operation failed due to timeout.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state_error\",\r\n        desc: \"Invalid state.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch_error\",\r\n        desc: \"Nonce is not matching, Nonce received: \"\r\n    },\r\n    loginProgressError: {\r\n        code: \"login_progress_error\",\r\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    acquireTokenProgressError: {\r\n        code: \"acquiretoken_progress_error\",\r\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    callbackError: {\r\n        code: \"callback_error\",\r\n        desc: \"Error occurred in token received callback function.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\r\n    },\r\n    userDoesNotExistError: {\r\n        code: \"user_non_existent\",\r\n        desc: \"User object does not exist. Please call a login API.\"\r\n    },\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoNotPopulatedError: {\r\n        code: \"client_info_not_populated_error\",\r\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenNotParsed: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    tokenEncodingError: {\r\n        code: \"token_encoding_error\",\r\n        desc: \"The token to be decoded is not encoded correctly.\"\r\n    },\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cannot_parse_cache\",\r\n        desc: \"The cached token key is not a valid JSON and cannot be parsed\"\r\n    },\r\n    blockTokenRequestsInHiddenIframe: {\r\n        code: \"block_token_requests\",\r\n        desc: \"Token calls are blocked in hidden iframes\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    ClientAuthError.createEndpointResolutionError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    ClientAuthError.createMultipleAuthoritiesInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleCacheAuthorities.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleCacheAuthorities.desc + \".\");\r\n    };\r\n    ClientAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createTokenRenewalTimeoutError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\r\n    };\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the state expected??\r\n    ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the Nonce expected??\r\n    ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\r\n    };\r\n    ClientAuthError.createLoginInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\r\n    };\r\n    ClientAuthError.createAcquireTokenInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\r\n    };\r\n    ClientAuthError.createUserCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\r\n    };\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    ClientAuthError.createUserDoesNotExistError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\r\n    };\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\r\n    };\r\n    ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\r\n    };\r\n    ClientAuthError.createInvalidInteractionTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\r\n    };\r\n    ClientAuthError.createCacheParseError = function (key) {\r\n        var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\r\nexport { ClientAuthError };\r\n//# sourceMappingURL=ClientAuthError.js.map","var _a;\r\nimport * as tslib_1 from \"tslib\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport { scrubTenantFromUri, hashPersonalIdentifier, prependEventNamePrefix } from \"./TelemetryUtils\";\r\nexport var EVENT_KEYS = {\r\n    AUTHORITY: prependEventNamePrefix(\"authority\"),\r\n    AUTHORITY_TYPE: prependEventNamePrefix(\"authority_type\"),\r\n    PROMPT: prependEventNamePrefix(\"ui_behavior\"),\r\n    TENANT_ID: prependEventNamePrefix(\"tenant_id\"),\r\n    USER_ID: prependEventNamePrefix(\"user_id\"),\r\n    WAS_SUCESSFUL: prependEventNamePrefix(\"was_successful\"),\r\n    API_ERROR_CODE: prependEventNamePrefix(\"api_error_code\"),\r\n    LOGIN_HINT: prependEventNamePrefix(\"login_hint\")\r\n};\r\nexport var API_CODE;\r\n(function (API_CODE) {\r\n    API_CODE[API_CODE[\"AcquireTokenRedirect\"] = 2001] = \"AcquireTokenRedirect\";\r\n    API_CODE[API_CODE[\"AcquireTokenSilent\"] = 2002] = \"AcquireTokenSilent\";\r\n    API_CODE[API_CODE[\"AcquireTokenPopup\"] = 2003] = \"AcquireTokenPopup\";\r\n    API_CODE[API_CODE[\"LoginRedirect\"] = 2004] = \"LoginRedirect\";\r\n    API_CODE[API_CODE[\"LoginPopup\"] = 2005] = \"LoginPopup\";\r\n    API_CODE[API_CODE[\"Logout\"] = 2006] = \"Logout\";\r\n})(API_CODE || (API_CODE = {}));\r\nexport var API_EVENT_IDENTIFIER;\r\n(function (API_EVENT_IDENTIFIER) {\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenRedirect\"] = \"AcquireTokenRedirect\";\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenSilent\"] = \"AcquireTokenSilent\";\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenPopup\"] = \"AcquireTokenPopup\";\r\n    API_EVENT_IDENTIFIER[\"LoginRedirect\"] = \"LoginRedirect\";\r\n    API_EVENT_IDENTIFIER[\"LoginPopup\"] = \"LoginPopup\";\r\n    API_EVENT_IDENTIFIER[\"Logout\"] = \"Logout\";\r\n})(API_EVENT_IDENTIFIER || (API_EVENT_IDENTIFIER = {}));\r\nvar mapEventIdentiferToCode = (_a = {},\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenSilent] = API_CODE.AcquireTokenSilent,\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenPopup] = API_CODE.AcquireTokenPopup,\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenRedirect] = API_CODE.AcquireTokenRedirect,\r\n    _a[API_EVENT_IDENTIFIER.LoginPopup] = API_CODE.LoginPopup,\r\n    _a[API_EVENT_IDENTIFIER.LoginRedirect] = API_CODE.LoginRedirect,\r\n    _a[API_EVENT_IDENTIFIER.Logout] = API_CODE.Logout,\r\n    _a);\r\nvar ApiEvent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ApiEvent, _super);\r\n    function ApiEvent(correlationId, piiEnabled, apiEventIdentifier) {\r\n        var _this = _super.call(this, prependEventNamePrefix(\"api_event\"), correlationId, apiEventIdentifier) || this;\r\n        if (apiEventIdentifier) {\r\n            _this.apiCode = mapEventIdentiferToCode[apiEventIdentifier];\r\n            _this.apiEventIdentifier = apiEventIdentifier;\r\n        }\r\n        _this.piiEnabled = piiEnabled;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ApiEvent.prototype, \"apiEventIdentifier\", {\r\n        set: function (apiEventIdentifier) {\r\n            this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiTelemIdConstStrKey] = apiEventIdentifier;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"apiCode\", {\r\n        set: function (apiCode) {\r\n            this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiIdConstStrKey] = apiCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"authority\", {\r\n        set: function (uri) {\r\n            this.event[EVENT_KEYS.AUTHORITY] = scrubTenantFromUri(uri).toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"apiErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.API_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"tenantId\", {\r\n        set: function (tenantId) {\r\n            this.event[EVENT_KEYS.TENANT_ID] = this.piiEnabled && tenantId ?\r\n                hashPersonalIdentifier(tenantId)\r\n                : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"accountId\", {\r\n        set: function (accountId) {\r\n            this.event[EVENT_KEYS.USER_ID] = this.piiEnabled && accountId ?\r\n                hashPersonalIdentifier(accountId)\r\n                : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"wasSuccessful\", {\r\n        get: function () {\r\n            return this.event[EVENT_KEYS.WAS_SUCESSFUL] === true;\r\n        },\r\n        set: function (wasSuccessful) {\r\n            this.event[EVENT_KEYS.WAS_SUCESSFUL] = wasSuccessful;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"loginHint\", {\r\n        set: function (loginHint) {\r\n            this.event[EVENT_KEYS.LOGIN_HINT] = this.piiEnabled && loginHint ?\r\n                hashPersonalIdentifier(loginHint)\r\n                : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"authorityType\", {\r\n        set: function (authorityType) {\r\n            this.event[EVENT_KEYS.AUTHORITY_TYPE] = authorityType.toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"promptType\", {\r\n        set: function (promptType) {\r\n            this.event[EVENT_KEYS.PROMPT] = promptType.toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ApiEvent;\r\n}(TelemetryEvent));\r\nexport default ApiEvent;\r\n//# sourceMappingURL=ApiEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    /* tslint:disable:no-string-literal */\r\n    function IdToken(rawIdToken) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        try {\r\n            this.rawIdToken = rawIdToken;\r\n            this.claims = TokenUtils.extractIdToken(rawIdToken);\r\n            if (this.claims) {\r\n                if (this.claims.hasOwnProperty(\"iss\")) {\r\n                    this.issuer = this.claims[\"iss\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"oid\")) {\r\n                    this.objectId = this.claims[\"oid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"sub\")) {\r\n                    this.subject = this.claims[\"sub\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"tid\")) {\r\n                    this.tenantId = this.claims[\"tid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"ver\")) {\r\n                    this.version = this.claims[\"ver\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"preferred_username\")) {\r\n                    this.preferredName = this.claims[\"preferred_username\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"name\")) {\r\n                    this.name = this.claims[\"name\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"nonce\")) {\r\n                    this.nonce = this.claims[\"nonce\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"exp\")) {\r\n                    this.expiration = this.claims[\"exp\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"home_oid\")) {\r\n                    this.homeObjectId = this.claims[\"home_oid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"sid\")) {\r\n                    this.sid = this.claims[\"sid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"cloud_instance_host_name\")) {\r\n                    this.cloudInstance = this.claims[\"cloud_instance_host_name\"];\r\n                }\r\n                /* tslint:enable:no-string-literal */\r\n            }\r\n        }\r\n        catch (e) {\r\n            /*\r\n             * TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.\r\n             * Need to add better error handling here to account for being unable to decode jwts.\r\n             */\r\n            throw ClientAuthError.createIdTokenParsingError(e);\r\n        }\r\n    }\r\n    return IdToken;\r\n}());\r\nexport { IdToken };\r\n//# sourceMappingURL=IdToken.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { libraryVersion } from \"./utils/Constants\";\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(localCallback, options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.level = LogLevel.Info;\r\n        var _a = options.correlationId, correlationId = _a === void 0 ? \"\" : _a, _b = options.level, level = _b === void 0 ? LogLevel.Info : _b, _c = options.piiLoggingEnabled, piiLoggingEnabled = _c === void 0 ? false : _c;\r\n        this.localCallback = localCallback;\r\n        this.correlationId = correlationId;\r\n        this.level = level;\r\n        this.piiLoggingEnabled = piiLoggingEnabled;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.logMessage = function (logLevel, logMessage, containsPii) {\r\n        if ((logLevel > this.level) || (!this.piiLoggingEnabled && containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var log;\r\n        if (!StringUtils.isEmpty(this.correlationId)) {\r\n            log = timestamp + \":\" + this.correlationId + \"-\" + libraryVersion() + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\r\n        }\r\n        else {\r\n            log = timestamp + \":\" + libraryVersion() + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\r\n        }\r\n        this.executeCallback(logLevel, log, containsPii);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.error = function (message) {\r\n        this.logMessage(LogLevel.Error, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.errorPii = function (message) {\r\n        this.logMessage(LogLevel.Error, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warning = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warningPii = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.info = function (message) {\r\n        this.logMessage(LogLevel.Info, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.infoPii = function (message) {\r\n        this.logMessage(LogLevel.Info, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbose = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbosePii = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, true);\r\n    };\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled;\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\n//# sourceMappingURL=Logger.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nexport var ServerErrorMessage = {\r\n    serverUnavailable: {\r\n        code: \"server_unavailable\",\r\n        desc: \"Server is temporarily unavailable.\"\r\n    },\r\n    unknownServerError: {\r\n        code: \"unknown_server_error\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    ServerError.createServerUnavailableError = function () {\r\n        return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\r\n    };\r\n    ServerError.createUnknownServerError = function (errorDesc) {\r\n        return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\r\n    };\r\n    return ServerError;\r\n}(AuthError));\r\nexport { ServerError };\r\n//# sourceMappingURL=ServerError.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport { EVENT_NAME_KEY, START_TIME_KEY, ELAPSED_TIME_KEY } from \"./TelemetryConstants\";\r\nimport { prependEventNamePrefix, startBrowserPerformanceMeasurement, endBrowserPerformanceMeasurement } from \"./TelemetryUtils\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nvar TelemetryEvent = /** @class */ (function () {\r\n    function TelemetryEvent(eventName, correlationId, eventLabel) {\r\n        var _a;\r\n        this.eventId = CryptoUtils.createNewGuid();\r\n        this.label = eventLabel;\r\n        this.event = (_a = {},\r\n            _a[prependEventNamePrefix(EVENT_NAME_KEY)] = eventName,\r\n            _a[prependEventNamePrefix(ELAPSED_TIME_KEY)] = -1,\r\n            _a[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = correlationId,\r\n            _a);\r\n    }\r\n    TelemetryEvent.prototype.setElapsedTime = function (time) {\r\n        this.event[prependEventNamePrefix(ELAPSED_TIME_KEY)] = time;\r\n    };\r\n    TelemetryEvent.prototype.stop = function () {\r\n        // Set duration of event\r\n        this.setElapsedTime(+Date.now() - +this.startTimestamp);\r\n        endBrowserPerformanceMeasurement(this.displayName, this.perfStartMark, this.perfEndMark);\r\n    };\r\n    TelemetryEvent.prototype.start = function () {\r\n        this.startTimestamp = Date.now();\r\n        this.event[prependEventNamePrefix(START_TIME_KEY)] = this.startTimestamp;\r\n        startBrowserPerformanceMeasurement(this.perfStartMark);\r\n    };\r\n    Object.defineProperty(TelemetryEvent.prototype, \"telemetryCorrelationId\", {\r\n        get: function () {\r\n            return this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey];\r\n        },\r\n        set: function (value) {\r\n            this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"eventName\", {\r\n        get: function () {\r\n            return this.event[prependEventNamePrefix(EVENT_NAME_KEY)];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TelemetryEvent.prototype.get = function () {\r\n        return tslib_1.__assign({}, this.event, { eventId: this.eventId });\r\n    };\r\n    Object.defineProperty(TelemetryEvent.prototype, \"key\", {\r\n        get: function () {\r\n            return this.telemetryCorrelationId + \"_\" + this.eventId + \"-\" + this.eventName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(TelemetryEvent.prototype, \"displayName\", {\r\n        get: function () {\r\n            return \"Msal-\" + this.label + \"-\" + this.telemetryCorrelationId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"perfStartMark\", {\r\n        get: function () {\r\n            return \"start-\" + this.key;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"perfEndMark\", {\r\n        get: function () {\r\n            return \"end-\" + this.key;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TelemetryEvent;\r\n}());\r\nexport default TelemetryEvent;\r\n//# sourceMappingURL=TelemetryEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { ServerError } from \"./ServerError\";\r\nexport var InteractionRequiredAuthErrorMessage = {\r\n    interactionRequired: {\r\n        code: \"interaction_required\"\r\n    },\r\n    consentRequired: {\r\n        code: \"consent_required\"\r\n    },\r\n    loginRequired: {\r\n        code: \"login_required\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when the user is required to perform an interactive token request.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorString) {\r\n        var interactionRequiredCodes = [\r\n            InteractionRequiredAuthErrorMessage.interactionRequired.code,\r\n            InteractionRequiredAuthErrorMessage.consentRequired.code,\r\n            InteractionRequiredAuthErrorMessage.loginRequired.code\r\n        ];\r\n        return errorString && interactionRequiredCodes.indexOf(errorString) > -1;\r\n    };\r\n    InteractionRequiredAuthError.createLoginRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createInteractionRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createConsentRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\r\nexport { InteractionRequiredAuthError };\r\n//# sourceMappingURL=InteractionRequiredAuthError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * Returns time in seconds for expiration based on string value passed in.\r\n     *\r\n     * @param expiresIn\r\n     */\r\n    TimeUtils.parseExpiresIn = function (expiresIn) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expiresIn) {\r\n            expiresIn = \"3599\";\r\n        }\r\n        return parseInt(expiresIn, 10);\r\n    };\r\n    /**\r\n     * Return the current time in Unix time (seconds). Date.getTime() returns in milliseconds.\r\n     */\r\n    TimeUtils.now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\r\nexport { TimeUtils };\r\n//# sourceMappingURL=TimeUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo(rawClientInfo) {\r\n        if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\r\n            this.uid = \"\";\r\n            this.utid = \"\";\r\n            return;\r\n        }\r\n        try {\r\n            var decodedClientInfo = CryptoUtils.base64Decode(rawClientInfo);\r\n            var clientInfo = JSON.parse(decodedClientInfo);\r\n            if (clientInfo) {\r\n                if (clientInfo.hasOwnProperty(\"uid\")) {\r\n                    this.uid = clientInfo.uid;\r\n                }\r\n                if (clientInfo.hasOwnProperty(\"utid\")) {\r\n                    this.utid = clientInfo.utid;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createClientInfoDecodingError(e);\r\n        }\r\n    }\r\n    Object.defineProperty(ClientInfo.prototype, \"uid\", {\r\n        get: function () {\r\n            return this._uid ? this._uid : \"\";\r\n        },\r\n        set: function (uid) {\r\n            this._uid = uid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientInfo.prototype, \"utid\", {\r\n        get: function () {\r\n            return this._utid ? this._utid : \"\";\r\n        },\r\n        set: function (utid) {\r\n            this._utid = utid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ClientInfo;\r\n}());\r\nexport { ClientInfo };\r\n//# sourceMappingURL=ClientInfo.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { Constants, ServerHashParamKeys } from \"./Constants\";\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar UrlUtils = /** @class */ (function () {\r\n    function UrlUtils() {\r\n    }\r\n    /**\r\n     * generates the URL with QueryString Parameters\r\n     * @param scopes\r\n     */\r\n    UrlUtils.createNavigateUrl = function (serverRequestParams) {\r\n        var str = this.createNavigationUrlString(serverRequestParams);\r\n        var authEndpoint = serverRequestParams.authorityInstance.AuthorizationEndpoint;\r\n        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n        if (authEndpoint.indexOf(\"?\") < 0) {\r\n            authEndpoint += \"?\";\r\n        }\r\n        else {\r\n            authEndpoint += \"&\";\r\n        }\r\n        var requestUrl = \"\" + authEndpoint + str.join(\"&\");\r\n        return requestUrl;\r\n    };\r\n    /**\r\n     * Generate the array of all QueryStringParams to be sent to the server\r\n     * @param scopes\r\n     */\r\n    UrlUtils.createNavigationUrlString = function (serverRequestParams) {\r\n        var scopes = serverRequestParams.scopes;\r\n        if (scopes.indexOf(serverRequestParams.clientId) === -1) {\r\n            scopes.push(serverRequestParams.clientId);\r\n        }\r\n        var str = [];\r\n        str.push(\"response_type=\" + serverRequestParams.responseType);\r\n        this.translateclientIdUsedInScope(scopes, serverRequestParams.clientId);\r\n        str.push(\"scope=\" + encodeURIComponent(ScopeSet.parseScope(scopes)));\r\n        str.push(\"client_id=\" + encodeURIComponent(serverRequestParams.clientId));\r\n        str.push(\"redirect_uri=\" + encodeURIComponent(serverRequestParams.redirectUri));\r\n        str.push(\"state=\" + encodeURIComponent(serverRequestParams.state));\r\n        str.push(\"nonce=\" + encodeURIComponent(serverRequestParams.nonce));\r\n        str.push(\"client_info=1\");\r\n        str.push(\"x-client-SKU=\" + serverRequestParams.xClientSku);\r\n        str.push(\"x-client-Ver=\" + serverRequestParams.xClientVer);\r\n        if (serverRequestParams.promptValue) {\r\n            str.push(\"prompt=\" + encodeURIComponent(serverRequestParams.promptValue));\r\n        }\r\n        if (serverRequestParams.claimsValue) {\r\n            str.push(\"claims=\" + encodeURIComponent(serverRequestParams.claimsValue));\r\n        }\r\n        if (serverRequestParams.queryParameters) {\r\n            str.push(serverRequestParams.queryParameters);\r\n        }\r\n        if (serverRequestParams.extraQueryParameters) {\r\n            str.push(serverRequestParams.extraQueryParameters);\r\n        }\r\n        str.push(\"client-request-id=\" + encodeURIComponent(serverRequestParams.correlationId));\r\n        return str;\r\n    };\r\n    /**\r\n     * append the required scopes: https://openid.net/specs/openid-connect-basic-1_0.html#Scopes\r\n     * @param scopes\r\n     */\r\n    UrlUtils.translateclientIdUsedInScope = function (scopes, clientId) {\r\n        var clientIdIndex = scopes.indexOf(clientId);\r\n        if (clientIdIndex >= 0) {\r\n            scopes.splice(clientIdIndex, 1);\r\n            if (scopes.indexOf(\"openid\") === -1) {\r\n                scopes.push(\"openid\");\r\n            }\r\n            if (scopes.indexOf(\"profile\") === -1) {\r\n                scopes.push(\"profile\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    UrlUtils.getCurrentUrl = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Returns given URL with query string removed\r\n     */\r\n    UrlUtils.removeHashFromUrl = function (url) {\r\n        return url.split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlUtils.replaceTenantPath = function (url, tenantId) {\r\n        url = url.toLowerCase();\r\n        var urlObject = this.GetUrlComponents(url);\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && pathArray[0] === Constants.common)) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return this.constructAuthorityUriFromObject(urlObject, pathArray);\r\n    };\r\n    UrlUtils.constructAuthorityUriFromObject = function (urlObject, pathArray) {\r\n        return this.CanonicalizeUri(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\"));\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlUtils.GetUrlComponents = function (url) {\r\n        if (!url) {\r\n            throw \"Url required\";\r\n        }\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        var match = url.match(regEx);\r\n        if (!match || match.length < 6) {\r\n            throw \"Valid url required\";\r\n        }\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (match[6]) {\r\n            urlComponents.Search = match[6];\r\n        }\r\n        if (match[8]) {\r\n            urlComponents.Hash = match[8];\r\n        }\r\n        return urlComponents;\r\n    };\r\n    /**\r\n     * Given a url or path, append a trailing slash if one doesnt exist\r\n     *\r\n     * @param url\r\n     */\r\n    UrlUtils.CanonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !UrlUtils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Checks to see if the url ends with the suffix\r\n     * Required because we are compiling for es5 instead of es6\r\n     * @param url\r\n     * @param str\r\n     */\r\n    // TODO: Rename this, not clear what it is supposed to do\r\n    UrlUtils.endsWith = function (url, suffix) {\r\n        if (!url || !suffix) {\r\n            return false;\r\n        }\r\n        return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n    };\r\n    /**\r\n     * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlUtils.urlRemoveQueryStringParameter = function (url, name) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return url;\r\n        }\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        url = url.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        url = url.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        url = url.replace(regex, \"\");\r\n        return url;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlUtils.getHashFromUrl = function (urlStringOrFragment) {\r\n        var hashIndex1 = urlStringOrFragment.indexOf(\"#\");\r\n        var hashIndex2 = urlStringOrFragment.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return urlStringOrFragment.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return urlStringOrFragment.substring(hashIndex1 + 1);\r\n        }\r\n        return urlStringOrFragment;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if the url contains a hash with known properties\r\n     * @ignore\r\n     */\r\n    UrlUtils.urlContainsHash = function (urlString) {\r\n        var parameters = UrlUtils.deserializeHash(urlString);\r\n        return (parameters.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ERROR) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ID_TOKEN));\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Returns deserialized portion of URL hash\r\n     * @ignore\r\n     */\r\n    UrlUtils.deserializeHash = function (urlFragment) {\r\n        var hash = UrlUtils.getHashFromUrl(urlFragment);\r\n        return CryptoUtils.deserialize(hash);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param {string} URI\r\n     * @returns {string} host from the URI\r\n     *\r\n     * extract URI from the host\r\n     */\r\n    UrlUtils.getHostFromUri = function (uri) {\r\n        // remove http:// or https:// from uri\r\n        var extractedUri = String(uri).replace(/^(https?:)\\/\\//, \"\");\r\n        extractedUri = extractedUri.split(\"/\")[0];\r\n        return extractedUri;\r\n    };\r\n    return UrlUtils;\r\n}());\r\nexport { UrlUtils };\r\n//# sourceMappingURL=UrlUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n * Constants\r\n */\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Object.defineProperty(Constants, \"libraryName\", {\r\n        get: function () { return \"Msal.js\"; } // used in telemetry sdkName\r\n        ,\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"claims\", {\r\n        get: function () { return \"claims\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"clientId\", {\r\n        get: function () { return \"clientId\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"adalIdToken\", {\r\n        get: function () { return \"adal.idtoken\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"cachePrefix\", {\r\n        get: function () { return \"msal\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"scopes\", {\r\n        get: function () { return \"scopes\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"no_account\", {\r\n        get: function () { return \"NO_ACCOUNT\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"upn\", {\r\n        get: function () { return \"upn\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"domain_hint\", {\r\n        get: function () { return \"domain_hint\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt_select_account\", {\r\n        get: function () { return \"&prompt=select_account\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt_none\", {\r\n        get: function () { return \"&prompt=none\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt\", {\r\n        get: function () { return \"prompt\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"response_mode_fragment\", {\r\n        get: function () { return \"&response_mode=fragment\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"resourceDelimiter\", {\r\n        get: function () { return \"|\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"cacheDelimiter\", {\r\n        get: function () { return \".\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpWidth\", {\r\n        get: function () { return this._popUpWidth; },\r\n        set: function (width) {\r\n            this._popUpWidth = width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpHeight\", {\r\n        get: function () { return this._popUpHeight; },\r\n        set: function (height) {\r\n            this._popUpHeight = height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"login\", {\r\n        get: function () { return \"LOGIN\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"renewToken\", {\r\n        get: function () { return \"RENEW_TOKEN\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"unknown\", {\r\n        get: function () { return \"UNKNOWN\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"homeAccountIdentifier\", {\r\n        get: function () { return \"homeAccountIdentifier\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"common\", {\r\n        get: function () { return \"common\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"openidScope\", {\r\n        get: function () { return \"openid\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"profileScope\", {\r\n        get: function () { return \"profile\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypeRedirect\", {\r\n        get: function () { return \"redirectInteraction\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypePopup\", {\r\n        get: function () { return \"popupInteraction\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypeSilent\", {\r\n        get: function () { return \"silentInteraction\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"inProgress\", {\r\n        get: function () { return \"inProgress\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Constants._popUpWidth = 483;\r\n    Constants._popUpHeight = 600;\r\n    return Constants;\r\n}());\r\nexport { Constants };\r\n/**\r\n * Keys in the hashParams\r\n */\r\nexport var ServerHashParamKeys;\r\n(function (ServerHashParamKeys) {\r\n    ServerHashParamKeys[\"SCOPE\"] = \"scope\";\r\n    ServerHashParamKeys[\"STATE\"] = \"state\";\r\n    ServerHashParamKeys[\"ERROR\"] = \"error\";\r\n    ServerHashParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    ServerHashParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    ServerHashParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    ServerHashParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    ServerHashParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    ServerHashParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n})(ServerHashParamKeys || (ServerHashParamKeys = {}));\r\n;\r\n/**\r\n * @hidden\r\n * CacheKeys for MSAL\r\n */\r\nexport var TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireTokenAccount\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"STATE_LOGIN\"] = \"state.login\";\r\n    TemporaryCacheKeys[\"STATE_ACQ_TOKEN\"] = \"state.acquireToken\";\r\n    TemporaryCacheKeys[\"STATE_RENEW\"] = \"state.renew\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.idtoken\";\r\n    TemporaryCacheKeys[\"LOGIN_REQUEST\"] = \"login.request\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"INTERACTION_STATUS\"] = \"interaction_status\";\r\n    TemporaryCacheKeys[\"REDIRECT_REQUEST\"] = \"redirect_request\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\nexport var PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"IDTOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\nexport var ErrorCacheKeys;\r\n(function (ErrorCacheKeys) {\r\n    ErrorCacheKeys[\"LOGIN_ERROR\"] = \"login.error\";\r\n    ErrorCacheKeys[\"ERROR\"] = \"error\";\r\n    ErrorCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(ErrorCacheKeys || (ErrorCacheKeys = {}));\r\nexport var AADTrustedHostList = {\r\n    \"login.windows.net\": \"login.windows.net\",\r\n    \"login.chinacloudapi.cn\": \"login.chinacloudapi.cn\",\r\n    \"login.cloudgovapi.us\": \"login.cloudgovapi.us\",\r\n    \"login.microsoftonline.com\": \"login.microsoftonline.com\",\r\n    \"login.microsoftonline.de\": \"login.microsoftonline.de\",\r\n    \"login.microsoftonline.us\": \"login.microsoftonline.us\"\r\n};\r\n/**\r\n * @hidden\r\n * SSO Types - generated to populate hints\r\n */\r\nexport var SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n;\r\n/**\r\n * @hidden\r\n */\r\nexport var BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n * @hidden\r\n */\r\nexport var PromptState = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\"\r\n};\r\n/**\r\n * Frame name prefixes for the hidden iframe created in silent frames\r\n */\r\nexport var FramePrefix = {\r\n    ID_TOKEN_FRAME: \"msalIdTokenFrame\",\r\n    TOKEN_FRAME: \"msalRenewFrame\"\r\n};\r\n/**\r\n * MSAL JS Library Version\r\n */\r\nexport function libraryVersion() {\r\n    return \"1.3.2\";\r\n}\r\n//# sourceMappingURL=Constants.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * Check if a string is empty\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    return StringUtils;\r\n}());\r\nexport { StringUtils };\r\n//# sourceMappingURL=StringUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar TokenUtils = /** @class */ (function () {\r\n    function TokenUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    TokenUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            return null;\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            // this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n            return null;\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    TokenUtils.extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = CryptoUtils.base64Decode(base64IdToken);\r\n            if (!base64Decoded) {\r\n                // this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n                return null;\r\n            }\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            // this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n        }\r\n        return null;\r\n    };\r\n    return TokenUtils;\r\n}());\r\nexport { TokenUtils };\r\n//# sourceMappingURL=TokenUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nexport function buildResponseStateOnly(state) {\r\n    return {\r\n        uniqueId: \"\",\r\n        tenantId: \"\",\r\n        tokenType: \"\",\r\n        idToken: null,\r\n        idTokenClaims: null,\r\n        accessToken: \"\",\r\n        scopes: null,\r\n        expiresOn: null,\r\n        account: null,\r\n        accountState: state,\r\n        fromCache: false\r\n    };\r\n}\r\n//# sourceMappingURL=AuthResponse.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { ClientAuthError } from \"./ClientAuthError\";\r\n;\r\nexport var ClientConfigurationErrorMessage = {\r\n    configurationNotSet: {\r\n        code: \"no_config_set\",\r\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\r\n    },\r\n    storageNotSupported: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"The value for the cacheLocation is not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    scopesRequired: {\r\n        code: \"scopes_required\",\r\n        desc: \"Scopes are required to obtain an access token.\"\r\n    },\r\n    emptyScopes: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as empty array.\"\r\n    },\r\n    nonArrayScopes: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientScope: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.\"\r\n    },\r\n    authorityUriInvalidPath: {\r\n        code: \"authority_uri_invalid_path\",\r\n        desc: \"Given authority URI is invalid.\"\r\n    },\r\n    unsupportedAuthorityValidation: {\r\n        code: \"unsupported_authority_validation\",\r\n        desc: \"The authority validation is not supported for this authority type.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. If using B2C, please include this authority in the knownAuthorities config parameter.\"\r\n    },\r\n    b2cAuthorityUriInvalidPath: {\r\n        code: \"b2c_authority_uri_invalid_path\",\r\n        desc: \"The given URI for the B2C authority is invalid.\"\r\n    },\r\n    b2cKnownAuthoritiesNotSet: {\r\n        code: \"b2c_known_authorities_not_set\",\r\n        desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    emptyRequestError: {\r\n        code: \"empty_request_error\",\r\n        desc: \"Request object is required.\"\r\n    },\r\n    invalidCorrelationIdError: {\r\n        code: \"invalid_guid_sent_as_correlationId\",\r\n        desc: \"Please set the correlationId as a valid guid\"\r\n    },\r\n    telemetryConfigError: {\r\n        code: \"telemetry_config_error\",\r\n        desc: \"Telemetry config is not configured with required values\"\r\n    },\r\n    ssoSilentError: {\r\n        code: \"sso_silent_error\",\r\n        desc: \"request must contain either sid or login_hint\"\r\n    },\r\n    invalidAuthorityMetadataError: {\r\n        code: \"authority_metadata_error\",\r\n        desc: \"Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the .js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    ClientConfigurationError.createNoSetConfigurationError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\r\n    };\r\n    ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientScope.code, ClientConfigurationErrorMessage.clientScope.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\r\n    };\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    ClientConfigurationError.createEmptyRequestError = function () {\r\n        var _a = ClientConfigurationErrorMessage.emptyRequestError, code = _a.code, desc = _a.desc;\r\n        return new ClientConfigurationError(code, desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCorrelationIdError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\r\n    };\r\n    ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityTypeError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code, ClientConfigurationErrorMessage.invalidAuthorityType.desc);\r\n    };\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    ClientConfigurationError.createTelemetryConfigError = function (config) {\r\n        var _a = ClientConfigurationErrorMessage.telemetryConfigError, code = _a.code, desc = _a.desc;\r\n        var requiredKeys = {\r\n            applicationName: \"string\",\r\n            applicationVersion: \"string\",\r\n            telemetryEmitter: \"function\"\r\n        };\r\n        var missingKeys = Object.keys(requiredKeys)\r\n            .reduce(function (keys, key) {\r\n            return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\r\n        }, []);\r\n        return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\r\n    };\r\n    ClientConfigurationError.createSsoSilentError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code, ClientConfigurationErrorMessage.ssoSilentError.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\r\nexport { ClientConfigurationError };\r\n//# sourceMappingURL=ClientConfigurationError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            if (enableCaching) {\r\n                /*\r\n                 * TODO: (shivb) ensure that this can be cached\r\n                 * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n                 */\r\n            }\r\n            xhr.onload = function (ev) {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var jsonResponse;\r\n                try {\r\n                    jsonResponse = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (e) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var response = {\r\n                    statusCode: xhr.status,\r\n                    body: jsonResponse\r\n                };\r\n                resolve(response);\r\n            };\r\n            xhr.onerror = function (ev) {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === \"GET\") {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw \"not implemented\";\r\n            }\r\n        });\r\n    };\r\n    XhrClient.prototype.handleError = function (responseText) {\r\n        var jsonResponse;\r\n        try {\r\n            jsonResponse = JSON.parse(responseText);\r\n            if (jsonResponse.error) {\r\n                return jsonResponse.error;\r\n            }\r\n            else {\r\n                throw responseText;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return responseText;\r\n        }\r\n    };\r\n    return XhrClient;\r\n}());\r\nexport { XhrClient };\r\n//# sourceMappingURL=XHRClient.js.map","import * as tslib_1 from \"tslib\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { scrubTenantFromUri, prependEventNamePrefix } from \"./TelemetryUtils\";\r\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\r\nexport var EVENT_KEYS = {\r\n    HTTP_PATH: prependEventNamePrefix(\"http_path\"),\r\n    USER_AGENT: prependEventNamePrefix(\"user_agent\"),\r\n    QUERY_PARAMETERS: prependEventNamePrefix(\"query_parameters\"),\r\n    API_VERSION: prependEventNamePrefix(\"api_version\"),\r\n    RESPONSE_CODE: prependEventNamePrefix(\"response_code\"),\r\n    O_AUTH_ERROR_CODE: prependEventNamePrefix(\"oauth_error_code\"),\r\n    HTTP_METHOD: prependEventNamePrefix(\"http_method\"),\r\n    REQUEST_ID_HEADER: prependEventNamePrefix(\"request_id_header\"),\r\n    SPE_INFO: prependEventNamePrefix(\"spe_info\"),\r\n    SERVER_ERROR_CODE: prependEventNamePrefix(\"server_error_code\"),\r\n    SERVER_SUB_ERROR_CODE: prependEventNamePrefix(\"server_sub_error_code\"),\r\n    URL: prependEventNamePrefix(\"url\")\r\n};\r\nvar HttpEvent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpEvent, _super);\r\n    function HttpEvent(correlationId, eventLabel) {\r\n        return _super.call(this, prependEventNamePrefix(\"http_event\"), correlationId, eventLabel) || this;\r\n    }\r\n    Object.defineProperty(HttpEvent.prototype, \"url\", {\r\n        set: function (url) {\r\n            var scrubbedUri = scrubTenantFromUri(url);\r\n            this.event[EVENT_KEYS.URL] = scrubbedUri && scrubbedUri.toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpPath\", {\r\n        set: function (httpPath) {\r\n            this.event[EVENT_KEYS.HTTP_PATH] = scrubTenantFromUri(httpPath).toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"userAgent\", {\r\n        set: function (userAgent) {\r\n            this.event[EVENT_KEYS.USER_AGENT] = userAgent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"queryParams\", {\r\n        set: function (queryParams) {\r\n            this.event[EVENT_KEYS.QUERY_PARAMETERS] = ServerRequestParameters.generateQueryParametersString(queryParams);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"apiVersion\", {\r\n        set: function (apiVersion) {\r\n            this.event[EVENT_KEYS.API_VERSION] = apiVersion.toLowerCase();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpResponseStatus\", {\r\n        set: function (statusCode) {\r\n            this.event[EVENT_KEYS.RESPONSE_CODE] = statusCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"oAuthErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.O_AUTH_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpMethod\", {\r\n        set: function (httpMethod) {\r\n            this.event[EVENT_KEYS.HTTP_METHOD] = httpMethod;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"requestIdHeader\", {\r\n        set: function (requestIdHeader) {\r\n            this.event[EVENT_KEYS.REQUEST_ID_HEADER] = requestIdHeader;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"speInfo\", {\r\n        /**\r\n         * Indicates whether the request was executed on a ring serving SPE traffic.\r\n         * An empty string indicates this occurred on an outer ring, and the string \"I\"\r\n         * indicates the request occurred on the inner ring\r\n         */\r\n        set: function (speInfo) {\r\n            this.event[EVENT_KEYS.SPE_INFO] = speInfo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"serverErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.SERVER_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"serverSubErrorCode\", {\r\n        set: function (subErrorCode) {\r\n            this.event[EVENT_KEYS.SERVER_SUB_ERROR_CODE] = subErrorCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpEvent;\r\n}(TelemetryEvent));\r\nexport default HttpEvent;\r\n//# sourceMappingURL=HttpEvent.js.map","import * as tslib_1 from \"tslib\";\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar ResponseUtils = /** @class */ (function () {\r\n    function ResponseUtils() {\r\n    }\r\n    ResponseUtils.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var exp = Number(idTokenObj.expiration);\r\n        if (exp && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(exp * 1000);\r\n        }\r\n        return tslib_1.__assign({}, originalResponse, { idToken: idTokenObj, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.objectId || idTokenObj.subject, tenantId: idTokenObj.tenantId });\r\n    };\r\n    return ResponseUtils;\r\n}());\r\nexport { ResponseUtils };\r\n//# sourceMappingURL=ResponseUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar CryptoUtils = /** @class */ (function () {\r\n    function CryptoUtils() {\r\n    }\r\n    /**\r\n     * Creates a new random GUID\r\n     * @returns string (GUID)\r\n     */\r\n    CryptoUtils.createNewGuid = function () {\r\n        /*\r\n         * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n         * pseudo-random numbers.\r\n         * The algorithm is as follows:\r\n         *     Set the two most significant bits (bits 6 and 7) of the\r\n         *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n         *     Set the four most significant bits (bits 12 through 15) of the\r\n         *        time_hi_and_version field to the 4-bit version number from\r\n         *        Section 4.1.3. Version4\r\n         *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n         *     values.\r\n         * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n         * time-low               = 4hexOctet\r\n         * time-mid               = 2hexOctet\r\n         * time-high-and-version  = 2hexOctet\r\n         * clock-seq-and-reserved = hexOctet:\r\n         * clock-seq-low          = hexOctet\r\n         * node                   = 6hexOctet\r\n         * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n         * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n         * y values are 8, 9, A, B\r\n         */\r\n        var cryptoObj = window.crypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return CryptoUtils.decimalToHex(buffer[0]) + CryptoUtils.decimalToHex(buffer[1])\r\n                + CryptoUtils.decimalToHex(buffer[2]) + CryptoUtils.decimalToHex(buffer[3])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[4]) + CryptoUtils.decimalToHex(buffer[5])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[6]) + CryptoUtils.decimalToHex(buffer[7])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[8]) + CryptoUtils.decimalToHex(buffer[9])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[10]) + CryptoUtils.decimalToHex(buffer[11])\r\n                + CryptoUtils.decimalToHex(buffer[12]) + CryptoUtils.decimalToHex(buffer[13])\r\n                + CryptoUtils.decimalToHex(buffer[14]) + CryptoUtils.decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    CryptoUtils.isGuid = function (guid) {\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    };\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    CryptoUtils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_4_%E2%80%93_escaping_the_string_before_encoding_it\r\n    /**\r\n     * encoding string to base64 - platform specific check\r\n     *\r\n     * @param input\r\n     */\r\n    CryptoUtils.base64Encode = function (input) {\r\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\r\n            return String.fromCharCode(Number(\"0x\" + p1));\r\n        }));\r\n    };\r\n    /**\r\n     * Decodes a base64 encoded string.\r\n     *\r\n     * @param input\r\n     */\r\n    CryptoUtils.base64Decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        return decodeURIComponent(atob(encodedString).split(\"\").map(function (c) {\r\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(\"\"));\r\n    };\r\n    /**\r\n     * deserialize a string\r\n     *\r\n     * @param query\r\n     */\r\n    CryptoUtils.deserialize = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \"))); }; // Some values (e.g. state) may need to be decoded twice\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    return CryptoUtils;\r\n}());\r\nexport { CryptoUtils };\r\n//# sourceMappingURL=CryptoUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, uid, utid) {\r\n        this.authority = UrlUtils.CanonicalizeUri(authority);\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n    }\r\n    return AccessTokenKey;\r\n}());\r\nexport { AccessTokenKey };\r\n//# sourceMappingURL=AccessTokenKey.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(accessToken, idToken, expiresIn, homeAccountIdentifier) {\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.expiresIn = expiresIn;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n    }\r\n    return AccessTokenValue;\r\n}());\r\nexport { AccessTokenValue };\r\n//# sourceMappingURL=AccessTokenValue.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { prependEventNamePrefix } from \"./TelemetryUtils\";\r\nvar DefaultEvent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DefaultEvent, _super);\r\n    // TODO Platform Type\r\n    function DefaultEvent(platform, correlationId, clientId, eventCount) {\r\n        var _this = _super.call(this, prependEventNamePrefix(\"default_event\"), correlationId, \"DefaultEvent\") || this;\r\n        _this.event[prependEventNamePrefix(\"client_id\")] = clientId;\r\n        _this.event[prependEventNamePrefix(\"sdk_plaform\")] = platform.sdk;\r\n        _this.event[prependEventNamePrefix(\"sdk_version\")] = platform.sdkVersion;\r\n        _this.event[prependEventNamePrefix(\"application_name\")] = platform.applicationName;\r\n        _this.event[prependEventNamePrefix(\"application_version\")] = platform.applicationVersion;\r\n        _this.event[prependEventNamePrefix(\"effective_connection_speed\")] = platform.networkInformation && platform.networkInformation.connectionSpeed;\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.UiEventCountTelemetryBatchKey] = _this.getEventCount(prependEventNamePrefix(\"ui_event\"), eventCount);\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.HttpEventCountTelemetryBatchKey] = _this.getEventCount(prependEventNamePrefix(\"http_event\"), eventCount);\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.CacheEventCountConstStrKey] = _this.getEventCount(prependEventNamePrefix(\"cache_event\"), eventCount);\r\n        return _this;\r\n        // / Device id?\r\n    }\r\n    DefaultEvent.prototype.getEventCount = function (eventName, eventCount) {\r\n        if (!eventCount[eventName]) {\r\n            return 0;\r\n        }\r\n        return eventCount[eventName];\r\n    };\r\n    return DefaultEvent;\r\n}(TelemetryEvent));\r\nexport default DefaultEvent;\r\n//# sourceMappingURL=DefaultEvent.js.map","import * as tslib_1 from \"tslib\";\r\nimport DefaultEvent from \"./DefaultEvent\";\r\nimport { libraryVersion, Constants } from \"../utils/Constants\";\r\nimport ApiEvent from \"./ApiEvent\";\r\nimport HttpEvent from \"./HttpEvent\";\r\n// for use in cache events\r\nvar MSAL_CACHE_EVENT_VALUE_PREFIX = \"msal.token\";\r\nvar MSAL_CACHE_EVENT_NAME = \"msal.cache_event\";\r\nvar TelemetryManager = /** @class */ (function () {\r\n    function TelemetryManager(config, telemetryEmitter, logger) {\r\n        // correlation Id to list of events\r\n        this.completedEvents = {};\r\n        // event key to event\r\n        this.inProgressEvents = {};\r\n        // correlation id to map of eventname to count\r\n        this.eventCountByCorrelationId = {};\r\n        // Implement after API EVENT\r\n        this.onlySendFailureTelemetry = false;\r\n        // TODO THROW if bad options\r\n        this.telemetryPlatform = tslib_1.__assign({ sdk: Constants.libraryName, sdkVersion: libraryVersion(), networkInformation: {\r\n                // @ts-ignore\r\n                connectionSpeed: typeof navigator !== \"undefined\" && navigator.connection && navigator.connection.effectiveType\r\n            } }, config.platform);\r\n        this.clientId = config.clientId;\r\n        this.onlySendFailureTelemetry = config.onlySendFailureTelemetry;\r\n        /*\r\n         * TODO, when i get to wiring this through, think about what it means if\r\n         * a developer does not implement telem at all, we still instrument, but telemetryEmitter can be\r\n         * optional?\r\n         */\r\n        this.telemetryEmitter = telemetryEmitter;\r\n        this.logger = logger;\r\n    }\r\n    TelemetryManager.getTelemetrymanagerStub = function (clientId, logger) {\r\n        var applicationName = \"UnSetStub\";\r\n        var applicationVersion = \"0.0\";\r\n        var telemetryEmitter = function () { };\r\n        var telemetryPlatform = {\r\n            applicationName: applicationName,\r\n            applicationVersion: applicationVersion\r\n        };\r\n        var telemetryManagerConfig = {\r\n            platform: telemetryPlatform,\r\n            clientId: clientId\r\n        };\r\n        return new this(telemetryManagerConfig, telemetryEmitter, logger);\r\n    };\r\n    TelemetryManager.prototype.startEvent = function (event) {\r\n        this.logger.verbose(\"Telemetry Event started: \" + event.key);\r\n        if (!this.telemetryEmitter) {\r\n            return;\r\n        }\r\n        event.start();\r\n        this.inProgressEvents[event.key] = event;\r\n    };\r\n    TelemetryManager.prototype.stopEvent = function (event) {\r\n        this.logger.verbose(\"Telemetry Event stopped: \" + event.key);\r\n        if (!this.telemetryEmitter || !this.inProgressEvents[event.key]) {\r\n            return;\r\n        }\r\n        event.stop();\r\n        this.incrementEventCount(event);\r\n        var completedEvents = this.completedEvents[event.telemetryCorrelationId];\r\n        this.completedEvents[event.telemetryCorrelationId] = (completedEvents || []).concat([event]);\r\n        delete this.inProgressEvents[event.key];\r\n    };\r\n    TelemetryManager.prototype.flush = function (correlationId) {\r\n        var _this = this;\r\n        this.logger.verbose(\"Flushing telemetry events: \" + correlationId);\r\n        // If there is only unfinished events should this still return them?\r\n        if (!this.telemetryEmitter || !this.completedEvents[correlationId]) {\r\n            return;\r\n        }\r\n        var orphanedEvents = this.getOrphanedEvents(correlationId);\r\n        orphanedEvents.forEach(function (event) { return _this.incrementEventCount(event); });\r\n        var eventsToFlush = this.completedEvents[correlationId].concat(orphanedEvents);\r\n        delete this.completedEvents[correlationId];\r\n        var eventCountsToFlush = this.eventCountByCorrelationId[correlationId];\r\n        delete this.eventCountByCorrelationId[correlationId];\r\n        // TODO add funcitonality for onlyFlushFailures after implementing api event? ??\r\n        if (!eventsToFlush || !eventsToFlush.length) {\r\n            return;\r\n        }\r\n        var defaultEvent = new DefaultEvent(this.telemetryPlatform, correlationId, this.clientId, eventCountsToFlush);\r\n        var eventsWithDefaultEvent = eventsToFlush.concat([defaultEvent]);\r\n        this.telemetryEmitter(eventsWithDefaultEvent.map(function (e) { return e.get(); }));\r\n    };\r\n    TelemetryManager.prototype.createAndStartApiEvent = function (correlationId, apiEventIdentifier) {\r\n        var apiEvent = new ApiEvent(correlationId, this.logger.isPiiLoggingEnabled(), apiEventIdentifier);\r\n        this.startEvent(apiEvent);\r\n        return apiEvent;\r\n    };\r\n    TelemetryManager.prototype.stopAndFlushApiEvent = function (correlationId, apiEvent, wasSuccessful, errorCode) {\r\n        apiEvent.wasSuccessful = wasSuccessful;\r\n        if (errorCode) {\r\n            apiEvent.apiErrorCode = errorCode;\r\n        }\r\n        this.stopEvent(apiEvent);\r\n        this.flush(correlationId);\r\n    };\r\n    TelemetryManager.prototype.createAndStartHttpEvent = function (correlation, httpMethod, url, eventLabel) {\r\n        var httpEvent = new HttpEvent(correlation, eventLabel);\r\n        httpEvent.url = url;\r\n        httpEvent.httpMethod = httpMethod;\r\n        this.startEvent(httpEvent);\r\n        return httpEvent;\r\n    };\r\n    TelemetryManager.prototype.incrementEventCount = function (event) {\r\n        var _a;\r\n        /*\r\n         * TODO, name cache event different?\r\n         * if type is cache event, change name\r\n         */\r\n        var eventName = event.eventName;\r\n        var eventCount = this.eventCountByCorrelationId[event.telemetryCorrelationId];\r\n        if (!eventCount) {\r\n            this.eventCountByCorrelationId[event.telemetryCorrelationId] = (_a = {},\r\n                _a[eventName] = 1,\r\n                _a);\r\n        }\r\n        else {\r\n            eventCount[eventName] = eventCount[eventName] ? eventCount[eventName] + 1 : 1;\r\n        }\r\n    };\r\n    TelemetryManager.prototype.getOrphanedEvents = function (correlationId) {\r\n        var _this = this;\r\n        return Object.keys(this.inProgressEvents)\r\n            .reduce(function (memo, eventKey) {\r\n            if (eventKey.indexOf(correlationId) !== -1) {\r\n                var event_1 = _this.inProgressEvents[eventKey];\r\n                delete _this.inProgressEvents[eventKey];\r\n                return memo.concat([event_1]);\r\n            }\r\n            return memo;\r\n        }, []);\r\n    };\r\n    return TelemetryManager;\r\n}());\r\nexport default TelemetryManager;\r\n//# sourceMappingURL=TelemetryManager.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AccessTokenKey } from \"./cache/AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./cache/AccessTokenValue\";\r\nimport { ServerRequestParameters } from \"./ServerRequestParameters\";\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { AuthCache } from \"./cache/AuthCache\";\r\nimport { Account } from \"./Account\";\r\nimport { ScopeSet } from \"./ScopeSet\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { WindowUtils } from \"./utils/WindowUtils\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { TimeUtils } from \"./utils/TimeUtils\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\nimport { RequestUtils } from \"./utils/RequestUtils\";\r\nimport { ResponseUtils } from \"./utils/ResponseUtils\";\r\nimport { AuthorityFactory } from \"./authority/AuthorityFactory\";\r\nimport { buildConfiguration } from \"./Configuration\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { AuthError } from \"./error/AuthError\";\r\nimport { ClientAuthError, ClientAuthErrorMessage } from \"./error/ClientAuthError\";\r\nimport { ServerError } from \"./error/ServerError\";\r\nimport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\r\nimport { buildResponseStateOnly } from \"./AuthResponse\";\r\nimport TelemetryManager from \"./telemetry/TelemetryManager\";\r\nimport { API_EVENT_IDENTIFIER } from \"./telemetry/ApiEvent\";\r\nimport { Constants, ServerHashParamKeys, TemporaryCacheKeys, PersistentCacheKeys, ErrorCacheKeys, FramePrefix } from \"./utils/Constants\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\n// default authority\r\nvar DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\r\n/**\r\n * @hidden\r\n * @ignore\r\n * response_type from OpenIDConnect\r\n * References: https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html & https://tools.ietf.org/html/rfc6749#section-4.2.1\r\n * Since we support only implicit flow in this library, we restrict the response_type support to only 'token' and 'id_token'\r\n *\r\n */\r\nvar ResponseTypes = {\r\n    id_token: \"id_token\",\r\n    token: \"token\",\r\n    id_token_token: \"id_token token\"\r\n};\r\n/**\r\n * UserAgentApplication class\r\n *\r\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\r\n */\r\nvar UserAgentApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application.\r\n     * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     *\r\n     * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\r\n     */\r\n    function UserAgentApplication(configuration) {\r\n        // callbacks for token/error\r\n        this.authResponseCallback = null;\r\n        this.tokenReceivedCallback = null;\r\n        this.errorReceivedCallback = null;\r\n        // Set the Configuration\r\n        this.config = buildConfiguration(configuration);\r\n        this.logger = this.config.system.logger;\r\n        this.clientId = this.config.auth.clientId;\r\n        this.inCookie = this.config.cache.storeAuthStateInCookie;\r\n        this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\r\n        AuthorityFactory.setKnownAuthorities(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);\r\n        AuthorityFactory.saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata);\r\n        // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\r\n        this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\r\n        // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\r\n        this.cacheStorage = new AuthCache(this.clientId, this.config.cache.cacheLocation, this.inCookie);\r\n        // Initialize window handling code\r\n        window.activeRenewals = {};\r\n        window.renewStates = [];\r\n        window.callbackMappedToRenewStates = {};\r\n        window.promiseMappedToRenewStates = {};\r\n        window.msal = this;\r\n        var urlHash = window.location.hash;\r\n        var urlContainsHash = UrlUtils.urlContainsHash(urlHash);\r\n        // check if back button is pressed\r\n        WindowUtils.checkIfBackButtonIsPressed(this.cacheStorage);\r\n        // On the server 302 - Redirect, handle this\r\n        if (urlContainsHash) {\r\n            var stateInfo = this.getResponseState(urlHash);\r\n            if (stateInfo.method === Constants.interactionTypeRedirect) {\r\n                this.handleRedirectAuthenticationResponse(urlHash);\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(UserAgentApplication.prototype, \"authority\", {\r\n        /**\r\n         * Method to manage the authority URL.\r\n         *\r\n         * @returns {string} authority\r\n         */\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        /**\r\n         * setter for the authority URL\r\n         * @param {string} authority\r\n         */\r\n        // If the developer passes an authority, create an instance\r\n        set: function (val) {\r\n            this.authorityInstance = AuthorityFactory.CreateInstance(val, this.config.auth.validateAuthority);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the current authority instance from the MSAL configuration object\r\n     *\r\n     * @returns {@link Authority} authority instance\r\n     */\r\n    UserAgentApplication.prototype.getAuthorityInstance = function () {\r\n        return this.authorityInstance;\r\n    };\r\n    UserAgentApplication.prototype.handleRedirectCallback = function (authOrTokenCallback, errorReceivedCallback) {\r\n        if (!authOrTokenCallback) {\r\n            throw ClientConfigurationError.createInvalidCallbackObjectError(authOrTokenCallback);\r\n        }\r\n        // Set callbacks\r\n        if (errorReceivedCallback) {\r\n            this.tokenReceivedCallback = authOrTokenCallback;\r\n            this.errorReceivedCallback = errorReceivedCallback;\r\n            this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\r\n        }\r\n        else {\r\n            this.authResponseCallback = authOrTokenCallback;\r\n        }\r\n        if (this.redirectError) {\r\n            this.authErrorHandler(Constants.interactionTypeRedirect, this.redirectError, this.redirectResponse);\r\n        }\r\n        else if (this.redirectResponse) {\r\n            this.authResponseHandler(Constants.interactionTypeRedirect, this.redirectResponse);\r\n        }\r\n    };\r\n    /**\r\n     * Public API to verify if the URL contains the hash with known properties\r\n     * @param hash\r\n     */\r\n    UserAgentApplication.prototype.urlContainsHash = function (hash) {\r\n        return UrlUtils.urlContainsHash(hash);\r\n    };\r\n    UserAgentApplication.prototype.authResponseHandler = function (interactionType, response, resolve) {\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            if (this.errorReceivedCallback) {\r\n                this.tokenReceivedCallback(response);\r\n            }\r\n            else if (this.authResponseCallback) {\r\n                this.authResponseCallback(null, response);\r\n            }\r\n        }\r\n        else if (interactionType === Constants.interactionTypePopup) {\r\n            resolve(response);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    UserAgentApplication.prototype.authErrorHandler = function (interactionType, authErr, response, reject) {\r\n        // set interaction_status to complete\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            if (this.errorReceivedCallback) {\r\n                this.errorReceivedCallback(authErr, response.accountState);\r\n            }\r\n            else {\r\n                this.authResponseCallback(authErr, response);\r\n            }\r\n        }\r\n        else if (interactionType === Constants.interactionTypePopup) {\r\n            reject(authErr);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    UserAgentApplication.prototype.loginRedirect = function (userRequest) {\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypeRedirect);\r\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, true, request, null, null);\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenRedirect = function (userRequest) {\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeRedirect);\r\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, false, request, null, null);\r\n    };\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.loginPopup = function (userRequest) {\r\n        var _this = this;\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.LoginPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(Constants.interactionTypePopup, true, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenPopup = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenPopup has been called\");\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(Constants.interactionTypePopup, false, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #region Acquire Token\r\n    /**\r\n     * Use when initiating the login process or when you want to obtain an access_token for your API,\r\n     * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenInteractive = function (interactionType, isLoginCall, request, resolve, reject) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenInteractive has been called\");\r\n        // block the request if made from the hidden iframe\r\n        WindowUtils.blockReloadInHiddenIframes();\r\n        var interactionProgress = this.cacheStorage.getItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            this.cacheStorage.setItem(TemporaryCacheKeys.REDIRECT_REQUEST, \"\" + Constants.inProgress + Constants.resourceDelimiter + request.state);\r\n        }\r\n        // If already in progress, do not proceed\r\n        if (interactionProgress === Constants.inProgress) {\r\n            var thrownError = isLoginCall ? ClientAuthError.createLoginInProgressError() : ClientAuthError.createAcquireTokenInProgressError();\r\n            var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\r\n            this.cacheStorage.resetTempCacheItems(request.state);\r\n            this.authErrorHandler(interactionType, thrownError, stateOnlyResponse, reject);\r\n            return;\r\n        }\r\n        // Get the account object if a session exists\r\n        var account;\r\n        if (request && request.account && !isLoginCall) {\r\n            account = request.account;\r\n            this.logger.verbose(\"Account set from request\");\r\n        }\r\n        else {\r\n            account = this.getAccount();\r\n            this.logger.verbose(\"Account set from MSAL Cache\");\r\n        }\r\n        // If no session exists, prompt the user to login.\r\n        if (!account && !ServerRequestParameters.isSSOParam(request)) {\r\n            if (isLoginCall) {\r\n                // extract ADAL id_token if exists\r\n                var adalIdToken = this.extractADALIdToken();\r\n                // silent login if ADAL id_token is retrieved successfully - SSO\r\n                if (adalIdToken && !request.scopes) {\r\n                    this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken\");\r\n                    var tokenRequest = this.buildIDTokenRequest(request);\r\n                    this.silentLogin = true;\r\n                    this.acquireTokenSilent(tokenRequest).then(function (response) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.info(\"Unified cache call is successful\");\r\n                        _this.authResponseHandler(interactionType, response, resolve);\r\n                        return;\r\n                    }, function (error) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.error(\"Error occurred during unified cache ATS: \" + error);\r\n                        // proceed to login since ATS failed\r\n                        _this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                    });\r\n                }\r\n                // No ADAL token found, proceed to login\r\n                else {\r\n                    this.logger.verbose(\"Login call but no token found, proceed to login\");\r\n                    this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                }\r\n            }\r\n            // AcquireToken call, but no account or context given, so throw error\r\n            else {\r\n                this.logger.verbose(\"AcquireToken call, no context or account given\");\r\n                this.logger.info(\"User login is required\");\r\n                var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\r\n                this.cacheStorage.resetTempCacheItems(request.state);\r\n                this.authErrorHandler(interactionType, ClientAuthError.createUserLoginRequiredError(), stateOnlyResponse, reject);\r\n                return;\r\n            }\r\n        }\r\n        // User session exists\r\n        else {\r\n            this.logger.verbose(\"User session exists, login not required\");\r\n            this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Helper function to acquireToken\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenHelper = function (account, interactionType, isLoginCall, request, resolve, reject) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var scope, serverAuthenticationRequest, acquireTokenAuthority, popUpWindow, responseType, loginStartPage, urlNavigate, hash, error_1, navigate, err_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Track the acquireToken progress\r\n                        this.cacheStorage.setItem(TemporaryCacheKeys.INTERACTION_STATUS, Constants.inProgress);\r\n                        scope = request.scopes ? request.scopes.join(\" \").toLowerCase() : this.clientId.toLowerCase();\r\n                        acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 11, , 12]);\r\n                        if (!!acquireTokenAuthority.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        responseType = isLoginCall ? ResponseTypes.id_token : this.getTokenType(account, request.scopes, false);\r\n                        loginStartPage = request.redirectStartPage || window.location.href;\r\n                        serverAuthenticationRequest = new ServerRequestParameters(acquireTokenAuthority, this.clientId, responseType, this.getRedirectUri(request && request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        serverAuthenticationRequest.populateQueryParams(account, request);\r\n                        urlNavigate = UrlUtils.createNavigateUrl(serverAuthenticationRequest) + Constants.response_mode_fragment;\r\n                        // set state in cache\r\n                        if (interactionType === Constants.interactionTypeRedirect) {\r\n                            if (!isLoginCall) {\r\n                                this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.STATE_ACQ_TOKEN + Constants.resourceDelimiter + request.state, serverAuthenticationRequest.state, this.inCookie);\r\n                            }\r\n                        }\r\n                        else if (interactionType === Constants.interactionTypePopup) {\r\n                            window.renewStates.push(serverAuthenticationRequest.state);\r\n                            window.requestType = isLoginCall ? Constants.login : Constants.renewToken;\r\n                            // Register callback to capture results from server\r\n                            this.registerCallback(serverAuthenticationRequest.state, scope, resolve, reject);\r\n                        }\r\n                        else {\r\n                            throw ClientAuthError.createInvalidInteractionTypeError();\r\n                        }\r\n                        if (!(interactionType === Constants.interactionTypePopup)) return [3 /*break*/, 9];\r\n                        // Generate a popup window\r\n                        try {\r\n                            popUpWindow = this.openPopup(urlNavigate, \"msal\", Constants.popUpWidth, Constants.popUpHeight);\r\n                            // Push popup window handle onto stack for tracking\r\n                            WindowUtils.trackPopup(popUpWindow);\r\n                        }\r\n                        catch (e) {\r\n                            this.logger.info(ClientAuthErrorMessage.popUpWindowError.code + \":\" + ClientAuthErrorMessage.popUpWindowError.desc);\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, ClientAuthErrorMessage.popUpWindowError.code);\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, ClientAuthErrorMessage.popUpWindowError.desc);\r\n                            if (reject) {\r\n                                reject(ClientAuthError.createPopupWindowError());\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        if (!popUpWindow) return [3 /*break*/, 8];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, WindowUtils.monitorWindowForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\r\n                    case 6:\r\n                        hash = _a.sent();\r\n                        this.handleAuthenticationResponse(hash);\r\n                        // Request completed successfully, set to completed\r\n                        this.cacheStorage.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n                        this.logger.info(\"Closing popup window\");\r\n                        // TODO: Check how this can be extracted for any framework specific code?\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpHashChanged\", hash);\r\n                            WindowUtils.closePopups();\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        error_1 = _a.sent();\r\n                        if (reject) {\r\n                            reject(error_1);\r\n                        }\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpClosed\", error_1.errorCode + Constants.resourceDelimiter + error_1.errorMessage);\r\n                        }\r\n                        else {\r\n                            // Request failed, set to canceled\r\n                            this.cacheStorage.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        // If onRedirectNavigate is implemented, invoke it and provide urlNavigate\r\n                        if (request.onRedirectNavigate) {\r\n                            this.logger.verbose(\"Invoking onRedirectNavigate callback\");\r\n                            navigate = request.onRedirectNavigate(urlNavigate);\r\n                            // Returning false from onRedirectNavigate will stop navigation\r\n                            if (navigate !== false) {\r\n                                this.logger.verbose(\"onRedirectNavigate did not return false, navigating\");\r\n                                this.navigateWindow(urlNavigate);\r\n                            }\r\n                            else {\r\n                                this.logger.verbose(\"onRedirectNavigate returned false, stopping navigation\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Otherwise, perform navigation\r\n                            this.logger.verbose(\"Navigating window to urlNavigate\");\r\n                            this.navigateWindow(urlNavigate);\r\n                        }\r\n                        _a.label = 10;\r\n                    case 10: return [3 /*break*/, 12];\r\n                    case 11:\r\n                        err_1 = _a.sent();\r\n                        this.logger.error(err_1);\r\n                        this.cacheStorage.resetTempCacheItems(request.state);\r\n                        this.authErrorHandler(interactionType, ClientAuthError.createEndpointResolutionError(err_1.toString), buildResponseStateOnly(request.state), reject);\r\n                        if (popUpWindow) {\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 12];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications\r\n     * @param request\r\n     */\r\n    UserAgentApplication.prototype.ssoSilent = function (request) {\r\n        // throw an error on an empty request\r\n        if (!request) {\r\n            throw ClientConfigurationError.createEmptyRequestError();\r\n        }\r\n        // throw an error on no hints passed\r\n        if (!request.sid && !request.loginHint) {\r\n            throw ClientConfigurationError.createSsoSilentError();\r\n        }\r\n        return this.acquireTokenSilent(tslib_1.__assign({}, request, { scopes: [this.clientId] }));\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a hidden iframe.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenSilent = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenSilent has been called\");\r\n        // validate the request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeSilent);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenSilent);\r\n        var requestSignature = RequestUtils.createRequestSignature(request);\r\n        return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var scope, account, adalIdToken, responseType, serverAuthenticationRequest, adalIdTokenObject, userContainedClaims, authErr, cacheResultResponse, logMessage, err_2;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the request if made from the hidden iframe\r\n                        WindowUtils.blockReloadInHiddenIframes();\r\n                        scope = request.scopes.join(\" \").toLowerCase();\r\n                        this.logger.verbosePii(\"Serialized scopes: \" + scope);\r\n                        if (request.account) {\r\n                            account = request.account;\r\n                            this.logger.verbose(\"Account set from request\");\r\n                        }\r\n                        else {\r\n                            account = this.getAccount();\r\n                            this.logger.verbose(\"Account set from MSAL Cache\");\r\n                        }\r\n                        adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n                        // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in\r\n                        if (!account && !(request.sid || request.loginHint) && StringUtils.isEmpty(adalIdToken)) {\r\n                            this.logger.info(\"User login is required\");\r\n                            // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively\r\n                            return [2 /*return*/, reject(ClientAuthError.createUserLoginRequiredError())];\r\n                        }\r\n                        responseType = this.getTokenType(account, request.scopes, true);\r\n                        this.logger.verbose(\"Response type: \" + responseType);\r\n                        serverAuthenticationRequest = new ServerRequestParameters(AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata), this.clientId, responseType, this.getRedirectUri(request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.logger.verbose(\"Finished building server authentication request\");\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        if (ServerRequestParameters.isSSOParam(request) || account) {\r\n                            serverAuthenticationRequest.populateQueryParams(account, request, null, true);\r\n                            this.logger.verbose(\"Query parameters populated from existing SSO or account\");\r\n                        }\r\n                        // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\r\n                        else if (!account && !StringUtils.isEmpty(adalIdToken)) {\r\n                            adalIdTokenObject = TokenUtils.extractIdToken(adalIdToken);\r\n                            this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters\");\r\n                            serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No additional query parameters added\");\r\n                        }\r\n                        userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\r\n                        // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache\r\n                        if (!userContainedClaims && !request.forceRefresh) {\r\n                            try {\r\n                                cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\r\n                            }\r\n                            catch (e) {\r\n                                authErr = e;\r\n                            }\r\n                        }\r\n                        if (!cacheResultResponse) return [3 /*break*/, 1];\r\n                        this.logger.verbose(\"Token is already in cache for scope: \" + scope);\r\n                        resolve(cacheResultResponse);\r\n                        return [2 /*return*/, null];\r\n                    case 1:\r\n                        if (!authErr) return [3 /*break*/, 2];\r\n                        this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\r\n                        reject(authErr);\r\n                        return [2 /*return*/, null];\r\n                    case 2:\r\n                        logMessage = void 0;\r\n                        if (userContainedClaims) {\r\n                            logMessage = \"Skipped cache lookup since claims were given\";\r\n                        }\r\n                        else if (request.forceRefresh) {\r\n                            logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\r\n                        }\r\n                        else {\r\n                            logMessage = \"Token is not in cache for scope: \" + scope;\r\n                        }\r\n                        this.logger.verbose(logMessage);\r\n                        // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.\r\n                        if (!serverAuthenticationRequest.authorityInstance) {\r\n                            serverAuthenticationRequest.authorityInstance = request.authority ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\r\n                        }\r\n                        this.logger.verbosePii(\"Authority instance: \" + serverAuthenticationRequest.authority);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 8]);\r\n                        if (!!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 5];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Authority has been updated with endpoint discovery response\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        /*\r\n                         * refresh attempt with iframe\r\n                         * Already renewing for this scope, callback when we get the token.\r\n                         */\r\n                        if (window.activeRenewals[requestSignature]) {\r\n                            this.logger.verbose(\"Renew token for scope and authority: \" + requestSignature + \" is in progress. Registering callback\");\r\n                            // Active renewals contains the state for each renewal.\r\n                            this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);\r\n                        }\r\n                        else {\r\n                            if (request.scopes && request.scopes.indexOf(this.clientId) > -1 && request.scopes.length === 1) {\r\n                                /*\r\n                                 * App uses idToken to send to api endpoints\r\n                                 * Default scope is tracked as clientId to store this token\r\n                                 */\r\n                                this.logger.verbose(\"Renewing idToken\");\r\n                                this.silentLogin = true;\r\n                                this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                            else {\r\n                                // renew access token\r\n                                this.logger.verbose(\"Renewing accesstoken\");\r\n                                this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        err_2 = _a.sent();\r\n                        this.logger.error(err_2);\r\n                        reject(ClientAuthError.createEndpointResolutionError(err_2.toString()));\r\n                        return [2 /*return*/, null];\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); })\r\n            .then(function (res) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return res;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Popup Window Creation\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left + \", scrollbars=yes\");\r\n            if (!popupWindow) {\r\n                throw ClientAuthError.createPopupWindowError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.cacheStorage.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n            throw ClientAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Iframe Management\r\n    /**\r\n     * @hidden\r\n     * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n     * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, requestSignature) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var expectedState, iframe, _a, hash, error_2;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        expectedState = window.activeRenewals[requestSignature];\r\n                        this.logger.verbosePii(\"Set loading state to pending for: \" + requestSignature + \":\" + expectedState);\r\n                        this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.RENEW_STATUS + Constants.resourceDelimiter + expectedState, Constants.inProgress);\r\n                        if (!this.config.system.navigateFrameWait) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, WindowUtils.loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = WindowUtils.loadFrameSync(urlNavigate, frameName, this.logger);\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        iframe = _a;\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        _b.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, WindowUtils.monitorWindowForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger, true)];\r\n                    case 5:\r\n                        hash = _b.sent();\r\n                        if (hash) {\r\n                            this.handleAuthenticationResponse(hash);\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_2 = _b.sent();\r\n                        if (this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.RENEW_STATUS + Constants.resourceDelimiter + expectedState) === Constants.inProgress) {\r\n                            // fail the iframe session if it's in pending state\r\n                            this.logger.verbose(\"Loading frame has timed out after: \" + (this.config.system.loadFrameTimeout / 1000) + \" seconds for scope/authority \" + requestSignature + \":\" + expectedState);\r\n                            // Error after timeout\r\n                            if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\r\n                                window.callbackMappedToRenewStates[expectedState](null, error_2);\r\n                            }\r\n                            this.cacheStorage.removeItem(\"\" + TemporaryCacheKeys.RENEW_STATUS + Constants.resourceDelimiter + expectedState);\r\n                        }\r\n                        WindowUtils.removeHiddenIframe(iframe);\r\n                        throw error_2;\r\n                    case 7:\r\n                        WindowUtils.removeHiddenIframe(iframe);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region General Helpers\r\n    /**\r\n     * @hidden\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     */\r\n    UserAgentApplication.prototype.navigateWindow = function (urlNavigate, popupWindow) {\r\n        // Navigate if valid URL\r\n        if (urlNavigate && !StringUtils.isEmpty(urlNavigate)) {\r\n            var navigateWindow = popupWindow ? popupWindow : window;\r\n            var logMessage = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\r\n            this.logger.infoPii(logMessage);\r\n            navigateWindow.location.assign(urlNavigate);\r\n        }\r\n        else {\r\n            this.logger.info(\"Navigate url is empty\");\r\n            throw AuthError.createUnexpectedError(\"Navigate url is empty\");\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n     * @param {string} expectedState - Unique state identifier (guid).\r\n     * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {Function} resolve - The resolve function of the promise object.\r\n     * @param {Function} reject - The reject function of the promise object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.registerCallback = function (expectedState, requestSignature, resolve, reject) {\r\n        var _this = this;\r\n        // track active renewals\r\n        window.activeRenewals[requestSignature] = expectedState;\r\n        // initialize callbacks mapped array\r\n        if (!window.promiseMappedToRenewStates[expectedState]) {\r\n            window.promiseMappedToRenewStates[expectedState] = [];\r\n        }\r\n        // indexing on the current state, push the callback params to callbacks mapped\r\n        window.promiseMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n        // Store the server response in the current window??\r\n        if (!window.callbackMappedToRenewStates[expectedState]) {\r\n            window.callbackMappedToRenewStates[expectedState] = function (response, error) {\r\n                // reset active renewals\r\n                window.activeRenewals[requestSignature] = null;\r\n                // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\r\n                for (var i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        if (error) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].reject(error);\r\n                        }\r\n                        else if (response) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].resolve(response);\r\n                        }\r\n                        else {\r\n                            _this.cacheStorage.resetTempCacheItems(expectedState);\r\n                            throw AuthError.createUnexpectedError(\"Error and response are both null\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _this.logger.warning(e);\r\n                    }\r\n                }\r\n                // reset\r\n                window.promiseMappedToRenewStates[expectedState] = null;\r\n                window.callbackMappedToRenewStates[expectedState] = null;\r\n            };\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    UserAgentApplication.prototype.logout = function (correlationId) {\r\n        this.logoutAsync(correlationId);\r\n    };\r\n    /**\r\n     * Async version of logout(). Use to log out the current user.\r\n     * @param correlationId Request correlationId\r\n     */\r\n    UserAgentApplication.prototype.logoutAsync = function (correlationId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var requestCorrelationId, apiEvent, correlationIdParam, postLogoutQueryParam, urlNavigate, error_3;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestCorrelationId = correlationId || CryptoUtils.createNewGuid();\r\n                        apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, API_EVENT_IDENTIFIER.Logout);\r\n                        this.clearCache();\r\n                        this.account = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        if (!!this.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        correlationIdParam = \"client-request-id=\" + requestCorrelationId;\r\n                        postLogoutQueryParam = this.getPostLogoutRedirectUri()\r\n                            ? \"&post_logout_redirect_uri=\" + encodeURIComponent(this.getPostLogoutRedirectUri())\r\n                            : \"\";\r\n                        urlNavigate = this.authorityInstance.EndSessionEndpoint\r\n                            ? this.authorityInstance.EndSessionEndpoint + \"?\" + correlationIdParam + postLogoutQueryParam\r\n                            : this.authority + \"oauth2/v2.0/logout?\" + correlationIdParam + postLogoutQueryParam;\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);\r\n                        this.navigateWindow(urlNavigate);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_3 = _a.sent();\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error_3.errorCode);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear all access tokens in the cache.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.clearCache = function () {\r\n        window.renewStates = [];\r\n        var accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenItems.length; i++) {\r\n            this.cacheStorage.removeItem(JSON.stringify(accessTokenItems[i].key));\r\n        }\r\n        this.cacheStorage.resetCacheItems();\r\n        // state not being sent would mean this call may not be needed; check later\r\n        this.cacheStorage.clearMsalCookie();\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear a given access token from the cache.\r\n     *\r\n     * @param accessToken\r\n     */\r\n    UserAgentApplication.prototype.clearCacheForScope = function (accessToken) {\r\n        var accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenItems.length; i++) {\r\n            var token = accessTokenItems[i];\r\n            if (token.value.accessToken === accessToken) {\r\n                this.cacheStorage.removeItem(JSON.stringify(token.key));\r\n            }\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Response\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n     * @param {string} hash - Hash passed from redirect page.\r\n     * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    UserAgentApplication.prototype.isCallback = function (hash) {\r\n        this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\r\n        return UrlUtils.urlContainsHash(hash);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to call the constructor callback with the token/error\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.processCallBack = function (hash, stateInfo, parentCallback) {\r\n        this.logger.info(\"Processing the callback from redirect response\");\r\n        // get the state info from the hash\r\n        if (!stateInfo) {\r\n            stateInfo = this.getResponseState(hash);\r\n        }\r\n        var response;\r\n        var authErr;\r\n        // Save the token info from the hash\r\n        try {\r\n            response = this.saveTokenFromHash(hash, stateInfo);\r\n        }\r\n        catch (err) {\r\n            authErr = err;\r\n        }\r\n        try {\r\n            // Clear the cookie in the hash\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n            var accountState = this.getAccountState(stateInfo.state);\r\n            if (response) {\r\n                if ((stateInfo.requestType === Constants.renewToken) || response.accessToken) {\r\n                    if (window.parent !== window) {\r\n                        this.logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"acquiring token interactive in progress\");\r\n                    }\r\n                    response.tokenType = ServerHashParamKeys.ACCESS_TOKEN;\r\n                }\r\n                else if (stateInfo.requestType === Constants.login) {\r\n                    response.tokenType = ServerHashParamKeys.ID_TOKEN;\r\n                }\r\n                if (!parentCallback) {\r\n                    this.redirectResponse = response;\r\n                    return;\r\n                }\r\n            }\r\n            else if (!parentCallback) {\r\n                this.redirectResponse = buildResponseStateOnly(accountState);\r\n                this.redirectError = authErr;\r\n                this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n                return;\r\n            }\r\n            parentCallback(response, authErr);\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error occurred in token received callback function: \" + err);\r\n            throw ClientAuthError.createErrorInCallbackFunction(err.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. It then resolves the promises with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {\r\n        // retrieve the hash\r\n        var locationHash = hash || window.location.hash;\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(locationHash);\r\n        var tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];\r\n        this.processCallBack(locationHash, stateInfo, tokenResponseCallback);\r\n        // If current window is opener, close all windows\r\n        WindowUtils.closePopups();\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. The result can then be accessed by user registered callbacks.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleRedirectAuthenticationResponse = function (hash) {\r\n        this.logger.info(\"Returned from redirect url\");\r\n        // clear hash from window\r\n        window.location.hash = \"\";\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(hash);\r\n        // if set to navigate to loginRequest page post login\r\n        if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {\r\n            var loginRequestUrl = this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.LOGIN_REQUEST + Constants.resourceDelimiter + stateInfo.state, this.inCookie);\r\n            // Redirect to home page if login request url is null (real null or the string null)\r\n            if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                this.logger.error(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                window.location.assign(\"/\");\r\n                return;\r\n            }\r\n            else {\r\n                var currentUrl = UrlUtils.removeHashFromUrl(window.location.href);\r\n                var finalRedirectUrl = UrlUtils.removeHashFromUrl(loginRequestUrl);\r\n                if (currentUrl !== finalRedirectUrl) {\r\n                    window.location.assign(\"\" + finalRedirectUrl + hash);\r\n                    return;\r\n                }\r\n                else {\r\n                    var loginRequestUrlComponents = UrlUtils.GetUrlComponents(loginRequestUrl);\r\n                    if (loginRequestUrlComponents.Hash) {\r\n                        window.location.hash = loginRequestUrlComponents.Hash;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.processCallBack(hash, stateInfo, null);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a stateInfo object from the URL fragment and returns it.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getResponseState = function (hash) {\r\n        var parameters = UrlUtils.deserializeHash(hash);\r\n        var stateResponse;\r\n        if (!parameters) {\r\n            throw AuthError.createUnexpectedError(\"Hash was not parsed correctly.\");\r\n        }\r\n        if (parameters.hasOwnProperty(ServerHashParamKeys.STATE)) {\r\n            var parsedState = RequestUtils.parseLibraryState(parameters.state);\r\n            stateResponse = {\r\n                requestType: Constants.unknown,\r\n                state: parameters.state,\r\n                timestamp: parsedState.ts,\r\n                method: parsedState.method,\r\n                stateMatch: false\r\n            };\r\n        }\r\n        else {\r\n            throw AuthError.createUnexpectedError(\"Hash does not contain state.\");\r\n        }\r\n        /*\r\n         * async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n         * incoming callback needs to be looked up to find the request type\r\n         */\r\n        // loginRedirect\r\n        if (stateResponse.state === this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.STATE_LOGIN + Constants.resourceDelimiter + stateResponse.state, this.inCookie) || stateResponse.state === this.silentAuthenticationState) {\r\n            stateResponse.requestType = Constants.login;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // acquireTokenRedirect\r\n        else if (stateResponse.state === this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.STATE_ACQ_TOKEN + Constants.resourceDelimiter + stateResponse.state, this.inCookie)) {\r\n            stateResponse.requestType = Constants.renewToken;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // external api requests may have many renewtoken requests for different resource\r\n        if (!stateResponse.stateMatch) {\r\n            stateResponse.requestType = window.requestType;\r\n            var statesInParentContext = window.renewStates;\r\n            for (var i = 0; i < statesInParentContext.length; i++) {\r\n                if (statesInParentContext[i] === stateResponse.state) {\r\n                    stateResponse.stateMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return stateResponse;\r\n    };\r\n    // #endregion\r\n    // #region Token Processing (Extract to TokenProcessing.ts)\r\n    /**\r\n     * @hidden\r\n     * Used to get token for the specified set of scopes from the cache\r\n     * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\r\n     * @param {Account} account - Account for which the scopes were requested\r\n     */\r\n    UserAgentApplication.prototype.getCachedToken = function (serverAuthenticationRequest, account) {\r\n        var accessTokenCacheItem = null;\r\n        var scopes = serverAuthenticationRequest.scopes;\r\n        // filter by clientId and account\r\n        var tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n        // No match found after initial filtering\r\n        if (tokenCacheItems.length === 0) {\r\n            return null;\r\n        }\r\n        var filteredItems = [];\r\n        // if no authority passed\r\n        if (!serverAuthenticationRequest.authority) {\r\n            // filter by scope\r\n            for (var i = 0; i < tokenCacheItems.length; i++) {\r\n                var cacheItem = tokenCacheItems[i];\r\n                var cachedScopes = cacheItem.key.scopes.split(\" \");\r\n                if (ScopeSet.containsScope(cachedScopes, scopes)) {\r\n                    filteredItems.push(cacheItem);\r\n                }\r\n            }\r\n            // if only one cached token found\r\n            if (filteredItems.length === 1) {\r\n                accessTokenCacheItem = filteredItems[0];\r\n                serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\r\n            }\r\n            // if more than one cached token is found\r\n            else if (filteredItems.length > 1) {\r\n                throw ClientAuthError.createMultipleMatchingTokensInCacheError(scopes.toString());\r\n            }\r\n            // if no match found, check if there was a single authority used\r\n            else {\r\n                var authorityList = this.getUniqueAuthority(tokenCacheItems, \"authority\");\r\n                if (authorityList.length > 1) {\r\n                    throw ClientAuthError.createMultipleAuthoritiesInCacheError(scopes.toString());\r\n                }\r\n                serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(authorityList[0], this.config.auth.validateAuthority);\r\n            }\r\n        }\r\n        // if an authority is passed in the API\r\n        else {\r\n            // filter by authority and scope\r\n            for (var i = 0; i < tokenCacheItems.length; i++) {\r\n                var cacheItem = tokenCacheItems[i];\r\n                var cachedScopes = cacheItem.key.scopes.split(\" \");\r\n                if (ScopeSet.containsScope(cachedScopes, scopes) && UrlUtils.CanonicalizeUri(cacheItem.key.authority) === serverAuthenticationRequest.authority) {\r\n                    filteredItems.push(cacheItem);\r\n                }\r\n            }\r\n            // no match\r\n            if (filteredItems.length === 0) {\r\n                return null;\r\n            }\r\n            // if only one cachedToken Found\r\n            else if (filteredItems.length === 1) {\r\n                accessTokenCacheItem = filteredItems[0];\r\n            }\r\n            else {\r\n                // if more than one cached token is found\r\n                throw ClientAuthError.createMultipleMatchingTokensInCacheError(scopes.toString());\r\n            }\r\n        }\r\n        if (accessTokenCacheItem != null) {\r\n            var expired = Number(accessTokenCacheItem.value.expiresIn);\r\n            // If expiration is within offset, it will force renew\r\n            var offset = this.config.system.tokenRenewalOffsetSeconds || 300;\r\n            if (expired && (expired > TimeUtils.now() + offset)) {\r\n                var idTokenObj = new IdToken(accessTokenCacheItem.value.idToken);\r\n                if (!account) {\r\n                    account = this.getAccount();\r\n                    if (!account) {\r\n                        throw AuthError.createUnexpectedError(\"Account should not be null here.\");\r\n                    }\r\n                }\r\n                var aState = this.getAccountState(serverAuthenticationRequest.state);\r\n                var response = {\r\n                    uniqueId: \"\",\r\n                    tenantId: \"\",\r\n                    tokenType: (accessTokenCacheItem.value.idToken === accessTokenCacheItem.value.accessToken) ? ServerHashParamKeys.ID_TOKEN : ServerHashParamKeys.ACCESS_TOKEN,\r\n                    idToken: idTokenObj,\r\n                    idTokenClaims: idTokenObj.claims,\r\n                    accessToken: accessTokenCacheItem.value.accessToken,\r\n                    scopes: accessTokenCacheItem.key.scopes.split(\" \"),\r\n                    expiresOn: new Date(expired * 1000),\r\n                    account: account,\r\n                    accountState: aState,\r\n                    fromCache: true\r\n                };\r\n                ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n                return response;\r\n            }\r\n            else {\r\n                this.cacheStorage.removeItem(JSON.stringify(filteredItems[0].key));\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to get a unique list of authorities from the cache\r\n     * @param {Array<AccessTokenCacheItem>}  accessTokenCacheItems - accessTokenCacheItems saved in the cache\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getUniqueAuthority = function (accessTokenCacheItems, property) {\r\n        var authorityList = [];\r\n        var flags = [];\r\n        accessTokenCacheItems.forEach(function (element) {\r\n            if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\r\n                flags.push(element.key[property]);\r\n                authorityList.push(element.key[property]);\r\n            }\r\n        });\r\n        return authorityList;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if ADAL id_token exists and return if exists.\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.extractADALIdToken = function () {\r\n        var adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n        if (!StringUtils.isEmpty(adalIdToken)) {\r\n            return TokenUtils.extractIdToken(adalIdToken);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Acquires access token using a hidden iframe.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.verbose(\"renewToken is called for scope and authority: \" + requestSignature);\r\n        var frameName = WindowUtils.generateFrameName(FramePrefix.TOKEN_FRAME, requestSignature);\r\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbosePii(\"Renew token Expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\r\n        window.renewStates.push(serverAuthenticationRequest.state);\r\n        window.requestType = Constants.renewToken;\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewIdToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.info(\"renewidToken is called\");\r\n        var frameName = WindowUtils.generateFrameName(FramePrefix.ID_TOKEN_FRAME, requestSignature);\r\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbose(\"Renew Idtoken Expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\r\n        if (this.silentLogin) {\r\n            window.requestType = Constants.login;\r\n            this.silentAuthenticationState = serverAuthenticationRequest.state;\r\n        }\r\n        else {\r\n            window.requestType = Constants.renewToken;\r\n            window.renewStates.push(serverAuthenticationRequest.state);\r\n        }\r\n        // note: scope here is clientId\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n     * @param {string} authority authority received in the redirect response from AAD.\r\n     * @param {TokenResponse} requestInfo an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     * @param {Account} account account object for which scopes are consented for. The default account is the logged in account.\r\n     * @param {ClientInfo} clientInfo clientInfo received as part of the response comprising of fields uid and utid.\r\n     * @param {IdToken} idToken idToken received as part of the response.\r\n     * @ignore\r\n     * @private\r\n     */\r\n    /* tslint:disable:no-string-literal */\r\n    UserAgentApplication.prototype.saveAccessToken = function (response, authority, parameters, clientInfo, idTokenObj) {\r\n        var scope;\r\n        var accessTokenResponse = tslib_1.__assign({}, response);\r\n        var clientObj = new ClientInfo(clientInfo);\r\n        var expiration;\r\n        // if the response contains \"scope\"\r\n        if (parameters.hasOwnProperty(ServerHashParamKeys.SCOPE)) {\r\n            // read the scopes\r\n            scope = parameters[ServerHashParamKeys.SCOPE];\r\n            var consentedScopes = scope.split(\" \");\r\n            // retrieve all access tokens from the cache, remove the dup scores\r\n            var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n            for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n                var accessTokenCacheItem = accessTokenCacheItems[i];\r\n                if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\r\n                    var cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n                    if (ScopeSet.isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n                        this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                    }\r\n                }\r\n            }\r\n            // Generate and cache accessTokenKey and accessTokenValue\r\n            var expiresIn = TimeUtils.parseExpiresIn(parameters[ServerHashParamKeys.EXPIRES_IN]);\r\n            var parsedState = RequestUtils.parseLibraryState(parameters[ServerHashParamKeys.STATE]);\r\n            expiration = parsedState.ts + expiresIn;\r\n            var accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n            var accessTokenValue = new AccessTokenValue(parameters[ServerHashParamKeys.ACCESS_TOKEN], idTokenObj.rawIdToken, expiration.toString(), clientInfo);\r\n            this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n            accessTokenResponse.accessToken = parameters[ServerHashParamKeys.ACCESS_TOKEN];\r\n            accessTokenResponse.scopes = consentedScopes;\r\n        }\r\n        // if the response does not contain \"scope\" - scope is usually client_id and the token will be id_token\r\n        else {\r\n            scope = this.clientId;\r\n            // Generate and cache accessTokenKey and accessTokenValue\r\n            var accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n            expiration = Number(idTokenObj.expiration);\r\n            var accessTokenValue = new AccessTokenValue(parameters[ServerHashParamKeys.ID_TOKEN], parameters[ServerHashParamKeys.ID_TOKEN], expiration.toString(), clientInfo);\r\n            this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n            accessTokenResponse.scopes = [scope];\r\n            accessTokenResponse.accessToken = parameters[ServerHashParamKeys.ID_TOKEN];\r\n        }\r\n        if (expiration) {\r\n            accessTokenResponse.expiresOn = new Date(expiration * 1000);\r\n        }\r\n        else {\r\n            this.logger.error(\"Could not parse expiresIn parameter\");\r\n        }\r\n        return accessTokenResponse;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.saveTokenFromHash = function (hash, stateInfo) {\r\n        this.logger.info(\"State status:\" + stateInfo.stateMatch + \"; Request type:\" + stateInfo.requestType);\r\n        var response = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: null,\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            accountState: \"\",\r\n            fromCache: false\r\n        };\r\n        var error;\r\n        var hashParams = UrlUtils.deserializeHash(hash);\r\n        var authorityKey = \"\";\r\n        var acquireTokenAccountKey = \"\";\r\n        var idTokenObj = null;\r\n        // If server returns an error\r\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) || hashParams.hasOwnProperty(ServerHashParamKeys.ERROR)) {\r\n            this.logger.infoPii(\"Error :\" + hashParams[ServerHashParamKeys.ERROR] + \"; Error description:\" + hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, hashParams[ServerHashParamKeys.ERROR]);\r\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            // login\r\n            if (stateInfo.requestType === Constants.login) {\r\n                this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION] + \":\" + hashParams[ServerHashParamKeys.ERROR]);\r\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\r\n            }\r\n            // acquireToken\r\n            if (stateInfo.requestType === Constants.renewToken) {\r\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\r\n                var account = this.getAccount();\r\n                var accountId = void 0;\r\n                if (account && !StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n                    accountId = account.homeAccountIdentifier;\r\n                }\r\n                else {\r\n                    accountId = Constants.no_account;\r\n                }\r\n                acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, stateInfo.state);\r\n            }\r\n            var _a = ServerHashParamKeys.ERROR, hashErr = hashParams[_a], _b = ServerHashParamKeys.ERROR_DESCRIPTION, hashErrDesc = hashParams[_b];\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(hashErr) ||\r\n                InteractionRequiredAuthError.isInteractionRequiredError(hashErrDesc)) {\r\n                error = new InteractionRequiredAuthError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            }\r\n            else {\r\n                error = new ServerError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            }\r\n        }\r\n        // If the server returns \"Success\"\r\n        else {\r\n            // Verify the state from redirect and record tokens to storage if exists\r\n            if (stateInfo.stateMatch) {\r\n                this.logger.info(\"State is right\");\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.SESSION_STATE)) {\r\n                    this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.SESSION_STATE + Constants.resourceDelimiter + stateInfo.state, hashParams[ServerHashParamKeys.SESSION_STATE]);\r\n                }\r\n                response.accountState = this.getAccountState(stateInfo.state);\r\n                var clientInfo = \"\";\r\n                // Process access_token\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN)) {\r\n                    this.logger.info(\"Fragment has access token\");\r\n                    response.accessToken = hashParams[ServerHashParamKeys.ACCESS_TOKEN];\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.SCOPE)) {\r\n                        response.scopes = hashParams[ServerHashParamKeys.SCOPE].split(\" \");\r\n                    }\r\n                    // retrieve the id_token from response if present\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\r\n                        idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\r\n                        response.idToken = idTokenObj;\r\n                        response.idTokenClaims = idTokenObj.claims;\r\n                    }\r\n                    else {\r\n                        idTokenObj = new IdToken(this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN));\r\n                        response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n                    }\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    // retrieve client_info - if it is not found, generate the uid and utid from idToken\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\r\n                        clientInfo = hashParams[ServerHashParamKeys.CLIENT_INFO];\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                        throw ClientAuthError.createClientInfoNotPopulatedError(\"ClientInfo not received in the response from the server\");\r\n                    }\r\n                    response.account = Account.createAccount(idTokenObj, new ClientInfo(clientInfo));\r\n                    var accountKey = void 0;\r\n                    if (response.account && !StringUtils.isEmpty(response.account.homeAccountIdentifier)) {\r\n                        accountKey = response.account.homeAccountIdentifier;\r\n                    }\r\n                    else {\r\n                        accountKey = Constants.no_account;\r\n                    }\r\n                    acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountKey, stateInfo.state);\r\n                    var acquireTokenAccountKey_noaccount = AuthCache.generateAcquireTokenAccountKey(Constants.no_account, stateInfo.state);\r\n                    var cachedAccount = this.cacheStorage.getItem(acquireTokenAccountKey);\r\n                    var acquireTokenAccount = void 0;\r\n                    // Check with the account in the Cache\r\n                    if (!StringUtils.isEmpty(cachedAccount)) {\r\n                        acquireTokenAccount = JSON.parse(cachedAccount);\r\n                        if (response.account && acquireTokenAccount && Account.compareAccounts(response.account, acquireTokenAccount)) {\r\n                            response = this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n                            this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n                        }\r\n                        else {\r\n                            this.logger.warning(\"The account object created from the response is not the same as the one passed in the acquireToken request\");\r\n                        }\r\n                    }\r\n                    else if (!StringUtils.isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\r\n                        response = this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n                    }\r\n                }\r\n                // Process id_token\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\r\n                    this.logger.info(\"Fragment has id token\");\r\n                    // set the idToken\r\n                    idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\r\n                    response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\r\n                        clientInfo = hashParams[ServerHashParamKeys.CLIENT_INFO];\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                    }\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    this.account = Account.createAccount(idTokenObj, new ClientInfo(clientInfo));\r\n                    response.account = this.account;\r\n                    if (idTokenObj && idTokenObj.nonce) {\r\n                        // check nonce integrity if idToken has nonce - throw an error if not matched\r\n                        if (idTokenObj.nonce !== this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.resourceDelimiter + stateInfo.state, this.inCookie)) {\r\n                            this.account = null;\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, \"Nonce Mismatch. Expected Nonce: \" + this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.resourceDelimiter + stateInfo.state, this.inCookie) + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                            this.logger.error(\"Nonce Mismatch.Expected Nonce: \" + this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.resourceDelimiter + stateInfo.state, this.inCookie) + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                            error = ClientAuthError.createNonceMismatchError(this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.resourceDelimiter + stateInfo.state, this.inCookie), idTokenObj.nonce);\r\n                        }\r\n                        // Save the token\r\n                        else {\r\n                            this.cacheStorage.setItem(PersistentCacheKeys.IDTOKEN, hashParams[ServerHashParamKeys.ID_TOKEN]);\r\n                            this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, clientInfo);\r\n                            // Save idToken as access token for app itself\r\n                            this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n                        }\r\n                    }\r\n                    else {\r\n                        authorityKey = stateInfo.state;\r\n                        acquireTokenAccountKey = stateInfo.state;\r\n                        this.logger.error(\"Invalid id_token received in the response\");\r\n                        error = ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\r\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\r\n                    }\r\n                }\r\n            }\r\n            // State mismatch - unexpected/invalid state\r\n            else {\r\n                authorityKey = stateInfo.state;\r\n                acquireTokenAccountKey = stateInfo.state;\r\n                var expectedState = this.cacheStorage.getItem(\"\" + TemporaryCacheKeys.STATE_LOGIN + Constants.resourceDelimiter + stateInfo.state, this.inCookie);\r\n                this.logger.error(\"State Mismatch.Expected State: \" + expectedState + \",\" + \"Actual State: \" + stateInfo.state);\r\n                error = ClientAuthError.createInvalidStateError(stateInfo.state, expectedState);\r\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\r\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\r\n            }\r\n        }\r\n        // Set status to completed\r\n        this.cacheStorage.removeItem(\"\" + TemporaryCacheKeys.RENEW_STATUS + Constants.resourceDelimiter + stateInfo.state);\r\n        this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n        // this is required if navigateToLoginRequestUrl=false\r\n        if (this.inCookie) {\r\n            this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n        }\r\n        if (error) {\r\n            // Error case, set status to cancelled\r\n            throw error;\r\n        }\r\n        if (!response) {\r\n            throw AuthError.createUnexpectedError(\"Response is null\");\r\n        }\r\n        return response;\r\n    };\r\n    /**\r\n     * Set Authority when saving Token from the hash\r\n     * @param state\r\n     * @param inCookie\r\n     * @param cacheStorage\r\n     * @param idTokenObj\r\n     * @param response\r\n     */\r\n    UserAgentApplication.prototype.populateAuthority = function (state, inCookie, cacheStorage, idTokenObj) {\r\n        var authorityKey = AuthCache.generateAuthorityKey(state);\r\n        var cachedAuthority = cacheStorage.getItem(authorityKey, inCookie);\r\n        // retrieve the authority from cache and replace with tenantID\r\n        return StringUtils.isEmpty(cachedAuthority) ? cachedAuthority : UrlUtils.replaceTenantPath(cachedAuthority, idTokenObj.tenantId);\r\n    };\r\n    /* tslint:enable:no-string-literal */\r\n    // #endregion\r\n    // #region Account\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    UserAgentApplication.prototype.getAccount = function () {\r\n        // if a session already exists, get the account from the session\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // frame is used to get idToken and populate the account for the given session\r\n        var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN);\r\n        var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO);\r\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken(rawIdToken);\r\n            var clientInfo = new ClientInfo(rawClientInfo);\r\n            this.account = Account.createAccount(idToken, clientInfo);\r\n            return this.account;\r\n        }\r\n        // if login not yet done, return null\r\n        return null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts state value from the accountState sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(Constants.resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return state;\r\n    };\r\n    /**\r\n     * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\r\n     *\r\n     * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\r\n     */\r\n    UserAgentApplication.prototype.getAllAccounts = function () {\r\n        var accounts = [];\r\n        var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\r\n            var clientInfo = new ClientInfo(accessTokenCacheItems[i].value.homeAccountIdentifier);\r\n            var account = Account.createAccount(idToken, clientInfo);\r\n            accounts.push(account);\r\n        }\r\n        return this.getUniqueAccounts(accounts);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to filter accounts based on homeAccountIdentifier\r\n     * @param {Array<Account>}  Accounts - accounts saved in the cache\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getUniqueAccounts = function (accounts) {\r\n        if (!accounts || accounts.length <= 1) {\r\n            return accounts;\r\n        }\r\n        var flags = [];\r\n        var uniqueAccounts = [];\r\n        for (var index = 0; index < accounts.length; ++index) {\r\n            if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\r\n                flags.push(accounts[index].homeAccountIdentifier);\r\n                uniqueAccounts.push(accounts[index]);\r\n            }\r\n        }\r\n        return uniqueAccounts;\r\n    };\r\n    // #endregion\r\n    // #region Angular\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Broadcast messages - Used only for Angular?  *\r\n     * @param eventName\r\n     * @param data\r\n     */\r\n    UserAgentApplication.prototype.broadcast = function (eventName, data) {\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Helper function to retrieve the cached token\r\n     *\r\n     * @param scopes\r\n     * @param {@link Account} account\r\n     * @param state\r\n     * @return {@link AuthResponse} AuthResponse\r\n     */\r\n    UserAgentApplication.prototype.getCachedTokenInternal = function (scopes, account, state, correlationId) {\r\n        // Get the current session's account object\r\n        var accountObject = account || this.getAccount();\r\n        if (!accountObject) {\r\n            return null;\r\n        }\r\n        // Construct AuthenticationRequest based on response type; set \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n        var newAuthority = this.authorityInstance ? this.authorityInstance : AuthorityFactory.CreateInstance(this.authority, this.config.auth.validateAuthority);\r\n        var responseType = this.getTokenType(accountObject, scopes, true);\r\n        var serverAuthenticationRequest = new ServerRequestParameters(newAuthority, this.clientId, responseType, this.getRedirectUri(), scopes, state, correlationId);\r\n        // get cached token\r\n        return this.getCachedToken(serverAuthenticationRequest, account);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\r\n     * Note: Please check if we need to set the \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n     *\r\n     * @param endpoint\r\n     */\r\n    UserAgentApplication.prototype.getScopesForEndpoint = function (endpoint) {\r\n        // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\r\n        if (this.config.framework.unprotectedResources.length > 0) {\r\n            for (var i = 0; i < this.config.framework.unprotectedResources.length; i++) {\r\n                if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        // process all protected resources and send the matched one\r\n        if (this.config.framework.protectedResourceMap.size > 0) {\r\n            for (var _i = 0, _a = Array.from(this.config.framework.protectedResourceMap.keys()); _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(key) > -1) {\r\n                    return this.config.framework.protectedResourceMap.get(key);\r\n                }\r\n            }\r\n        }\r\n        /*\r\n         * default resource will be clientid if nothing specified\r\n         * App will use idtoken for calls to itself\r\n         * check if it's staring from http or https, needs to match with app host\r\n         */\r\n        if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\r\n            if (UrlUtils.getHostFromUri(endpoint) === UrlUtils.getHostFromUri(this.getRedirectUri())) {\r\n                return new Array(this.clientId);\r\n            }\r\n        }\r\n        else {\r\n            /*\r\n             * in angular level, the url for $http interceptor call could be relative url,\r\n             * if it's relative call, we'll treat it as app backend call.\r\n             */\r\n            return new Array(this.clientId);\r\n        }\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n    /**\r\n     * Return boolean flag to developer to help inform if login is in progress\r\n     * @returns {boolean} true/false\r\n     */\r\n    UserAgentApplication.prototype.getLoginInProgress = function () {\r\n        return this.cacheStorage.getItem(TemporaryCacheKeys.INTERACTION_STATUS) === Constants.inProgress;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setInteractionInProgress = function (inProgress) {\r\n        if (inProgress) {\r\n            this.cacheStorage.setItem(TemporaryCacheKeys.INTERACTION_STATUS, Constants.inProgress);\r\n        }\r\n        else {\r\n            this.cacheStorage.removeItem(TemporaryCacheKeys.INTERACTION_STATUS);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setloginInProgress = function (loginInProgress) {\r\n        this.setInteractionInProgress(loginInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the status of acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.getAcquireTokenInProgress = function () {\r\n        return this.cacheStorage.getItem(TemporaryCacheKeys.INTERACTION_STATUS) === Constants.inProgress;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.setAcquireTokenInProgress = function (acquireTokenInProgress) {\r\n        this.setInteractionInProgress(acquireTokenInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the logger handle\r\n     */\r\n    UserAgentApplication.prototype.getLogger = function () {\r\n        return this.logger;\r\n    };\r\n    /**\r\n     * Sets the logger callback.\r\n     * @param logger Logger callback\r\n     */\r\n    UserAgentApplication.prototype.setLogger = function (logger) {\r\n        this.logger = logger;\r\n    };\r\n    // #endregion\r\n    // #region Getters and Setters\r\n    /**\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getRedirectUri = function (reqRedirectUri) {\r\n        if (reqRedirectUri) {\r\n            return reqRedirectUri;\r\n        }\r\n        else if (typeof this.config.auth.redirectUri === \"function\") {\r\n            return this.config.auth.redirectUri();\r\n        }\r\n        return this.config.auth.redirectUri;\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getPostLogoutRedirectUri = function () {\r\n        if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\r\n            return this.config.auth.postLogoutRedirectUri();\r\n        }\r\n        return this.config.auth.postLogoutRedirectUri;\r\n    };\r\n    /**\r\n     * Use to get the current {@link Configuration} object in MSAL\r\n     *\r\n     * @returns {@link Configuration}\r\n     */\r\n    UserAgentApplication.prototype.getCurrentConfiguration = function () {\r\n        if (!this.config) {\r\n            throw ClientConfigurationError.createNoSetConfigurationError();\r\n        }\r\n        return this.config;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Utils function to create the Authentication\r\n     * @param {@link account} account object\r\n     * @param scopes\r\n     * @param silentCall\r\n     *\r\n     * @returns {string} token type: id_token or access_token\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.getTokenType = function (accountObject, scopes, silentCall) {\r\n        /*\r\n         * if account is passed and matches the account object/or set to getAccount() from cache\r\n         * if client-id is passed as scope, get id_token else token/id_token_token (in case no session exists)\r\n         */\r\n        var tokenType;\r\n        // acquireTokenSilent\r\n        if (silentCall) {\r\n            if (Account.compareAccounts(accountObject, this.getAccount())) {\r\n                tokenType = (scopes.indexOf(this.config.auth.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.token;\r\n            }\r\n            else {\r\n                tokenType = (scopes.indexOf(this.config.auth.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.id_token_token;\r\n            }\r\n            return tokenType;\r\n        }\r\n        // all other cases\r\n        else {\r\n            if (!Account.compareAccounts(accountObject, this.getAccount())) {\r\n                tokenType = ResponseTypes.id_token_token;\r\n            }\r\n            else {\r\n                tokenType = (scopes.indexOf(this.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.token;\r\n            }\r\n            return tokenType;\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAccountCache = function (account, state) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account ? this.getAccountId(account) : Constants.no_account;\r\n        var acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, state);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAuthorityCache = function (state, authority) {\r\n        // Cache authorityKey\r\n        var authorityKey = AuthCache.generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, UrlUtils.CanonicalizeUri(authority), this.inCookie);\r\n    };\r\n    /**\r\n     * Updates account, authority, and nonce in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.updateCacheEntries = function (serverAuthenticationRequest, account, isLoginCall, loginStartPage) {\r\n        // Cache Request Originator Page\r\n        if (loginStartPage) {\r\n            this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.LOGIN_REQUEST + Constants.resourceDelimiter + serverAuthenticationRequest.state, loginStartPage, this.inCookie);\r\n        }\r\n        // Cache account and authority\r\n        if (isLoginCall) {\r\n            // Cache the state\r\n            this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.STATE_LOGIN + Constants.resourceDelimiter + serverAuthenticationRequest.state, serverAuthenticationRequest.state, this.inCookie);\r\n        }\r\n        else {\r\n            this.setAccountCache(account, serverAuthenticationRequest.state);\r\n        }\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\r\n        // Cache nonce\r\n        this.cacheStorage.setItem(\"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.resourceDelimiter + serverAuthenticationRequest.state, serverAuthenticationRequest.nonce, this.inCookie);\r\n    };\r\n    /**\r\n     * Returns the unique identifier for the logged in account\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountId = function (account) {\r\n        // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\r\n        var accountId;\r\n        if (!StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n            accountId = account.homeAccountIdentifier;\r\n        }\r\n        else {\r\n            accountId = Constants.no_account;\r\n        }\r\n        return accountId;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param extraQueryParameters\r\n     *\r\n     * Construct 'tokenRequest' from the available data in adalIdToken\r\n     */\r\n    UserAgentApplication.prototype.buildIDTokenRequest = function (request) {\r\n        var tokenRequest = {\r\n            scopes: [this.clientId],\r\n            authority: this.authority,\r\n            account: this.getAccount(),\r\n            extraQueryParameters: request.extraQueryParameters,\r\n            correlationId: request.correlationId\r\n        };\r\n        return tokenRequest;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param config\r\n     * @param clientId\r\n     *\r\n     * Construct TelemetryManager from Configuration\r\n     */\r\n    UserAgentApplication.prototype.getTelemetryManagerFromConfig = function (config, clientId) {\r\n        if (!config) { // if unset\r\n            return TelemetryManager.getTelemetrymanagerStub(clientId, this.logger);\r\n        }\r\n        // if set then validate\r\n        var applicationName = config.applicationName, applicationVersion = config.applicationVersion, telemetryEmitter = config.telemetryEmitter;\r\n        if (!applicationName || !applicationVersion || !telemetryEmitter) {\r\n            throw ClientConfigurationError.createTelemetryConfigError(config);\r\n        }\r\n        // if valid then construct\r\n        var telemetryPlatform = {\r\n            applicationName: applicationName,\r\n            applicationVersion: applicationVersion\r\n        };\r\n        var telemetryManagerConfig = {\r\n            platform: telemetryPlatform,\r\n            clientId: clientId\r\n        };\r\n        return new TelemetryManager(telemetryManagerConfig, telemetryEmitter, this.logger);\r\n    };\r\n    return UserAgentApplication;\r\n}());\r\nexport { UserAgentApplication };\r\n//# sourceMappingURL=UserAgentApplication.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"./Logger\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\n/**\r\n * Defaults for the Configuration Options\r\n */\r\nvar FRAME_TIMEOUT = 6000;\r\nvar OFFSET = 300;\r\nvar NAVIGATE_FRAME_WAIT = 500;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    validateAuthority: true,\r\n    authorityMetadata: \"\",\r\n    knownAuthorities: [],\r\n    redirectUri: function () { return UrlUtils.getCurrentUrl(); },\r\n    postLogoutRedirectUri: function () { return UrlUtils.getCurrentUrl(); },\r\n    navigateToLoginRequestUrl: true\r\n};\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    cacheLocation: \"sessionStorage\",\r\n    storeAuthStateInCookie: false\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    logger: new Logger(null),\r\n    loadFrameTimeout: FRAME_TIMEOUT,\r\n    tokenRenewalOffsetSeconds: OFFSET,\r\n    navigateFrameWait: NAVIGATE_FRAME_WAIT\r\n};\r\nvar DEFAULT_FRAMEWORK_OPTIONS = {\r\n    isAngular: false,\r\n    unprotectedResources: new Array(),\r\n    protectedResourceMap: new Map()\r\n};\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n * @param TAuthorityDataOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nexport function buildConfiguration(_a) {\r\n    var auth = _a.auth, _b = _a.cache, cache = _b === void 0 ? {} : _b, _c = _a.system, system = _c === void 0 ? {} : _c, _d = _a.framework, framework = _d === void 0 ? {} : _d;\r\n    var overlayedConfig = {\r\n        auth: tslib_1.__assign({}, DEFAULT_AUTH_OPTIONS, auth),\r\n        cache: tslib_1.__assign({}, DEFAULT_CACHE_OPTIONS, cache),\r\n        system: tslib_1.__assign({}, DEFAULT_SYSTEM_OPTIONS, system),\r\n        framework: tslib_1.__assign({}, DEFAULT_FRAMEWORK_OPTIONS, framework)\r\n    };\r\n    return overlayedConfig;\r\n}\r\n//# sourceMappingURL=Configuration.js.map","export var EVENT_NAME_PREFIX = \"msal.\";\r\nexport var EVENT_NAME_KEY = \"event_name\";\r\nexport var START_TIME_KEY = \"start_time\";\r\nexport var ELAPSED_TIME_KEY = \"elapsed_time\";\r\nexport var TELEMETRY_BLOB_EVENT_NAMES = {\r\n    MsalCorrelationIdConstStrKey: \"Microsoft.MSAL.correlation_id\",\r\n    ApiTelemIdConstStrKey: \"msal.api_telem_id\",\r\n    ApiIdConstStrKey: \"msal.api_id\",\r\n    BrokerAppConstStrKey: \"Microsoft_MSAL_broker_app\",\r\n    CacheEventCountConstStrKey: \"Microsoft_MSAL_cache_event_count\",\r\n    HttpEventCountTelemetryBatchKey: \"Microsoft_MSAL_http_event_count\",\r\n    IdpConstStrKey: \"Microsoft_MSAL_idp\",\r\n    IsSilentTelemetryBatchKey: \"\",\r\n    IsSuccessfulConstStrKey: \"Microsoft_MSAL_is_successful\",\r\n    ResponseTimeConstStrKey: \"Microsoft_MSAL_response_time\",\r\n    TenantIdConstStrKey: \"Microsoft_MSAL_tenant_id\",\r\n    UiEventCountTelemetryBatchKey: \"Microsoft_MSAL_ui_event_count\"\r\n};\r\n// This is used to replace the real tenant in telemetry info\r\nexport var TENANT_PLACEHOLDER = \"<tenant>\";\r\n//# sourceMappingURL=TelemetryConstants.js.map","import { ClientAuthError } from \"../error/ClientAuthError\";\r\nimport { UrlUtils } from \"./UrlUtils\";\r\nimport { TemporaryCacheKeys, Constants } from \"../utils/Constants\";\r\nvar WindowUtils = /** @class */ (function () {\r\n    function WindowUtils() {\r\n    }\r\n    /**\r\n     * @hidden\r\n     * Checks if the current page is running in an iframe.\r\n     * @ignore\r\n     */\r\n    WindowUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if the current page is running in a popup.\r\n     * @ignore\r\n     */\r\n    WindowUtils.isInPopup = function () {\r\n        return !!(window.opener && window.opener !== window);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @param prefix\r\n     * @param scopes\r\n     * @param authority\r\n     */\r\n    WindowUtils.generateFrameName = function (prefix, requestSignature) {\r\n        return \"\" + prefix + Constants.resourceDelimiter + requestSignature;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Monitors a window until it loads a url with a hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.monitorWindowForHash = function (contentWindow, timeout, urlNavigate, logger, isSilentCall) {\r\n        return new Promise(function (resolve, reject) {\r\n            var maxTicks = timeout / WindowUtils.POLLING_INTERVAL_MS;\r\n            var ticks = 0;\r\n            logger.verbose(\"monitorWindowForHash polling started\");\r\n            var intervalId = setInterval(function () {\r\n                if (contentWindow.closed) {\r\n                    logger.error(\"monitorWindowForHash window closed\");\r\n                    clearInterval(intervalId);\r\n                    reject(ClientAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                if (isSilentCall) {\r\n                    /*\r\n                     * Always run clock for silent calls\r\n                     * as silent operations should be short,\r\n                     * and to ensure they always at worst timeout.\r\n                     */\r\n                    ticks++;\r\n                }\r\n                else {\r\n                    // Don't process blank pages or cross domain\r\n                    if (!href || href === \"about:blank\") {\r\n                        return;\r\n                    }\r\n                    /*\r\n                     * Only run clock when we are on same domain for popups\r\n                     * as popup operations can take a long time.\r\n                     */\r\n                    ticks++;\r\n                }\r\n                if (href && UrlUtils.urlContainsHash(href)) {\r\n                    logger.verbose(\"monitorWindowForHash found url in hash\");\r\n                    clearInterval(intervalId);\r\n                    resolve(contentWindow.location.hash);\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    logger.error(\"monitorWindowForHash unable to find hash in url, timing out\");\r\n                    logger.errorPii(\"monitorWindowForHash polling timed out for url: \" + urlNavigate);\r\n                    clearInterval(intervalId);\r\n                    reject(ClientAuthError.createTokenRenewalTimeoutError());\r\n                }\r\n            }, WindowUtils.POLLING_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    WindowUtils.loadFrame = function (urlNavigate, frameName, timeoutMs, logger) {\r\n        var _this = this;\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        logger.infoPii(\"LoadFrame: \" + frameName);\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                var frameHandle = _this.loadFrameSync(urlNavigate, frameName, logger);\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe with name: \" + frameName);\r\n                    return;\r\n                }\r\n                resolve(frameHandle);\r\n            }, timeoutMs);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    WindowUtils.loadFrameSync = function (urlNavigate, frameName, logger) {\r\n        var frameHandle = WindowUtils.addHiddenIFrame(frameName, logger);\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n            logger.infoPii(\"Frame Name : \" + frameName + \" Navigated to: \" + urlNavigate);\r\n        }\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Adds the hidden iframe for silent token renewal.\r\n     * @ignore\r\n     */\r\n    WindowUtils.addHiddenIFrame = function (iframeId, logger) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        logger.infoPii(\"Add msal frame to document:\" + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n        if (!adalFrame) {\r\n            if (document.createElement &&\r\n                document.documentElement &&\r\n                (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                var ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.setAttribute(\"aria-hidden\", \"true\");\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                adalFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                adalFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n        return adalFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    WindowUtils.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Find and return the iframe element with the given hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.getIframeWithHash = function (hash) {\r\n        var iframes = document.getElementsByTagName(\"iframe\");\r\n        var iframeArray = Array.apply(null, Array(iframes.length)).map(function (iframe, index) { return iframes.item(index); }); // eslint-disable-line prefer-spread\r\n        return iframeArray.filter(function (iframe) {\r\n            try {\r\n                return iframe.contentWindow.location.hash === hash;\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        })[0];\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Returns an array of all the popups opened by MSAL\r\n     * @ignore\r\n     */\r\n    WindowUtils.getPopups = function () {\r\n        if (!window.openedWindows) {\r\n            window.openedWindows = [];\r\n        }\r\n        return window.openedWindows;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Find and return the popup with the given hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.getPopUpWithHash = function (hash) {\r\n        return WindowUtils.getPopups().filter(function (popup) {\r\n            try {\r\n                return popup.location.hash === hash;\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        })[0];\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Add the popup to the known list of popups\r\n     * @ignore\r\n     */\r\n    WindowUtils.trackPopup = function (popup) {\r\n        WindowUtils.getPopups().push(popup);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Close all popups\r\n     * @ignore\r\n     */\r\n    WindowUtils.closePopups = function () {\r\n        WindowUtils.getPopups().forEach(function (popup) { return popup.close(); });\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * blocks any login/acquireToken calls to reload from within a hidden iframe (generated for silent calls)\r\n     */\r\n    WindowUtils.blockReloadInHiddenIframes = function () {\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (UrlUtils.urlContainsHash(window.location.hash) && WindowUtils.isInIframe()) {\r\n            throw ClientAuthError.createBlockTokenRequestsInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param cacheStorage\r\n     */\r\n    WindowUtils.checkIfBackButtonIsPressed = function (cacheStorage) {\r\n        var redirectCache = cacheStorage.getItem(TemporaryCacheKeys.REDIRECT_REQUEST);\r\n        // if redirect request is set and there is no hash\r\n        if (redirectCache && !UrlUtils.urlContainsHash(window.location.hash)) {\r\n            var splitCache = redirectCache.split(Constants.resourceDelimiter);\r\n            var state = splitCache.length > 1 ? splitCache[splitCache.length - 1] : null;\r\n            cacheStorage.resetTempCacheItems(state);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Interval in milliseconds that we poll a window\r\n     * @ignore\r\n     */\r\n    WindowUtils.POLLING_INTERVAL_MS = 50;\r\n    return WindowUtils;\r\n}());\r\nexport { WindowUtils };\r\n//# sourceMappingURL=WindowUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nexport var AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    },\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object available. Details:\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    AuthError.createNoWindowObjectError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.noWindowObjectError.code, AuthErrorMessage.noWindowObjectError.desc + \" \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\r\nexport { AuthError };\r\n//# sourceMappingURL=AuthError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { ClientConfigurationErrorMessage } from \"../error/ClientConfigurationError\";\r\nimport { XhrClient } from \"../XHRClient\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nimport HttpEvent from \"../telemetry/HttpEvent\";\r\n/**\r\n * @hidden\r\n */\r\nexport var AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Aad\"] = 0] = \"Aad\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n    AuthorityType[AuthorityType[\"B2C\"] = 2] = \"B2C\";\r\n})(AuthorityType || (AuthorityType = {}));\r\n/**\r\n * @hidden\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, validateAuthority, authorityMetadata) {\r\n        this.IsValidationEnabled = validateAuthority;\r\n        this.CanonicalAuthority = authority;\r\n        this.validateAsUri();\r\n        this.tenantDiscoveryResponse = authorityMetadata;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"Tenant\", {\r\n        get: function () {\r\n            return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"AuthorizationEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"EndSessionEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"SelfSignedJwtAudience\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.Issuer.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateResolved = function () {\r\n        if (!this.hasCachedMetadata()) {\r\n            throw \"Please call ResolveEndpointsAsync first\";\r\n        }\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority;\r\n        },\r\n        set: function (url) {\r\n            this.canonicalAuthority = UrlUtils.CanonicalizeUri(url);\r\n            this.canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthorityUrlComponents\", {\r\n        get: function () {\r\n            if (!this.canonicalAuthorityUrlComponents) {\r\n                this.canonicalAuthorityUrlComponents = UrlUtils.GetUrlComponents(this.CanonicalAuthority);\r\n            }\r\n            return this.canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"DefaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n         */\r\n        get: function () {\r\n            return this.CanonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Given a string, validate that it is of the form https://domain/path\r\n     */\r\n    Authority.prototype.validateAsUri = function () {\r\n        var components;\r\n        try {\r\n            components = this.CanonicalAuthorityUrlComponents;\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationErrorMessage.invalidAuthorityType;\r\n        }\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationErrorMessage.authorityUriInsecure;\r\n        }\r\n        if (!components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationErrorMessage.authorityUriInvalidPath;\r\n        }\r\n    };\r\n    /**\r\n     * Calls the OIDC endpoint and returns the response\r\n     */\r\n    Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint, telemetryManager, correlationId) {\r\n        var client = new XhrClient();\r\n        var httpMethod = \"GET\";\r\n        var httpEvent = new HttpEvent(correlationId, \"openIdConfigurationEndpoint\");\r\n        httpEvent.url = openIdConfigurationEndpoint;\r\n        httpEvent.httpMethod = httpMethod;\r\n        telemetryManager.startEvent(httpEvent);\r\n        return client.sendRequestAsync(openIdConfigurationEndpoint, httpMethod, /* enableCaching: */ true)\r\n            .then(function (response) {\r\n            httpEvent.httpResponseStatus = response.statusCode;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            return {\r\n                AuthorizationEndpoint: response.body.authorization_endpoint,\r\n                EndSessionEndpoint: response.body.end_session_endpoint,\r\n                Issuer: response.body.issuer\r\n            };\r\n        })\r\n            .catch(function (err) {\r\n            httpEvent.serverErrorCode = err;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            throw err;\r\n        });\r\n    };\r\n    /**\r\n     * Returns a promise.\r\n     * Checks to see if the authority is in the cache\r\n     * Discover endpoints via openid-configuration\r\n     * If successful, caches the endpoint for later use in OIDC\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function (telemetryManager, correlationId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var openIdConfigurationEndpointResponse, _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.GetOpenIdConfigurationEndpointAsync(telemetryManager, correlationId)];\r\n                    case 1:\r\n                        openIdConfigurationEndpointResponse = _b.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.DiscoverEndpoints(openIdConfigurationEndpointResponse, telemetryManager, correlationId)];\r\n                    case 2:\r\n                        _a.tenantDiscoveryResponse = _b.sent();\r\n                        return [2 /*return*/, this.tenantDiscoveryResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if there is a cached tenant discovery response with required fields.\r\n     */\r\n    Authority.prototype.hasCachedMetadata = function () {\r\n        return !!(this.tenantDiscoveryResponse &&\r\n            this.tenantDiscoveryResponse.AuthorizationEndpoint &&\r\n            this.tenantDiscoveryResponse.EndSessionEndpoint &&\r\n            this.tenantDiscoveryResponse.Issuer);\r\n    };\r\n    return Authority;\r\n}());\r\nexport { Authority };\r\n//# sourceMappingURL=Authority.js.map","/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file shows how to use MSAL.js to get an access token to Microsoft Graph an pass it to the task pane.\n */\n\n/* global console, localStorage, Office */\n\nimport * as Msal from \"msal\";\n\nOffice.initialize = function() {\n  if (Office.context.ui.messageParent) {\n    userAgentApp.handleRedirectCallback(authCallback);\n\n    // The very first time the add-in runs on a developer's computer, msal.js hasn't yet\n    // stored login data in localStorage. So a direct call of acquireTokenRedirect\n    // causes the error \"User login is required\". Once the user is logged in successfully\n    // the first time, msal data in localStorage will prevent this error from ever hap-\n    // pening again; but the error must be blocked here, so that the user can login\n    // successfully the first time. To do that, call loginRedirect first instead of\n    // acquireTokenRedirect.\n    if (localStorage.getItem(\"loggedIn\") === \"yes\") {\n      userAgentApp.acquireTokenRedirect(requestObj);\n    } else {\n      // This will login the user and then the (response.tokenType === \"id_token\")\n      // path in authCallback below will run, which sets localStorage.loggedIn to \"yes\"\n      // and then the dialog is redirected back to this script, so the\n      // acquireTokenRedirect above runs.\n      userAgentApp.loginRedirect(requestObj);\n    }\n  }\n};\n\nconst msalConfig: Msal.Configuration = {\n  auth: {\n    clientId: \"63483ce1-539b-42c9-a984-fa7f327c1724\", //This is your client ID\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: \"https://localhost:3000/fallbackauthdialog.html\",\n    navigateToLoginRequestUrl: false\n  },\n  cache: {\n    cacheLocation: \"localStorage\", // Needed to avoid \"User login is required\" error.\n    storeAuthStateInCookie: true // Recommended to avoid certain IE/Edge issues.\n  }\n};\n\nvar requestObj: Object = {\n  scopes: [`https://graph.microsoft.com/User.Read`]\n};\n\nconst userAgentApp: Msal.UserAgentApplication = new Msal.UserAgentApplication(\n  msalConfig\n);\n\nfunction authCallback(error, response) {\n  if (error) {\n    console.log(error);\n    Office.context.ui.messageParent(JSON.stringify({ status: \"failure\", result: error }));\n  } else {\n    if (response.tokenType === \"id_token\") {\n      console.log(response.idToken.rawIdToken);\n      localStorage.setItem(\"loggedIn\", \"yes\");\n    } else {\n      console.log(\"token type is:\" + response.tokenType);\n      Office.context.ui.messageParent(JSON.stringify({ status: \"success\", result: response.accessToken }));\n    }\n  }\n}\n","export { UserAgentApplication } from \"./UserAgentApplication\";\r\nexport { Logger } from \"./Logger\";\r\nexport { LogLevel } from \"./Logger\";\r\nexport { Account } from \"./Account\";\r\nexport { Constants, ServerHashParamKeys } from \"./utils/Constants\";\r\nexport { Authority } from \"./authority/Authority\";\r\nexport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nexport { UrlUtils } from \"./utils/UrlUtils\";\r\nexport { WindowUtils } from \"./utils/WindowUtils\";\r\n// Errors\r\nexport { AuthError } from \"./error/AuthError\";\r\nexport { ClientAuthError } from \"./error/ClientAuthError\";\r\nexport { ServerError } from \"./error/ServerError\";\r\nexport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nexport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\r\n//# sourceMappingURL=index.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { XhrClient } from \"../XHRClient\";\r\nimport { AADTrustedHostList } from \"../utils/Constants\";\r\n/**\r\n * @hidden\r\n */\r\nvar AadAuthority = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AadAuthority, _super);\r\n    function AadAuthority(authority, validateAuthority, authorityMetadata) {\r\n        return _super.call(this, authority, validateAuthority, authorityMetadata) || this;\r\n    }\r\n    Object.defineProperty(AadAuthority.prototype, \"AadInstanceDiscoveryEndpointUrl\", {\r\n        get: function () {\r\n            return AadAuthority.AadInstanceDiscoveryEndpoint + \"?api-version=1.0&authorization_endpoint=\" + this.CanonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AadAuthority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return AuthorityType.Aad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    AadAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function (telemetryManager, correlationId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var client, httpMethod, httpEvent;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!this.IsValidationEnabled || this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                    return [2 /*return*/, this.DefaultOpenIdConfigurationEndpoint];\r\n                }\r\n                client = new XhrClient();\r\n                httpMethod = \"GET\";\r\n                httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, this.AadInstanceDiscoveryEndpointUrl, \"AadInstanceDiscoveryEndpoint\");\r\n                return [2 /*return*/, client.sendRequestAsync(this.AadInstanceDiscoveryEndpointUrl, httpMethod, true)\r\n                        .then(function (response) {\r\n                        httpEvent.httpResponseStatus = response.statusCode;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        return response.body.tenant_discovery_endpoint;\r\n                    })\r\n                        .catch(function (err) {\r\n                        httpEvent.serverErrorCode = err;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        throw err;\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    AadAuthority.prototype.IsInTrustedHostList = function (host) {\r\n        return AADTrustedHostList[host.toLowerCase()];\r\n    };\r\n    AadAuthority.AadInstanceDiscoveryEndpoint = \"https://login.microsoftonline.com/common/discovery/instance\";\r\n    return AadAuthority;\r\n}(Authority));\r\nexport { AadAuthority };\r\n//# sourceMappingURL=AadAuthority.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Authority } from \"./Authority\";\r\nimport { AuthorityType } from \"./Authority\";\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nexport var B2CTrustedHostList = {};\r\n/**\r\n * @hidden\r\n */\r\nvar B2cAuthority = /** @class */ (function (_super) {\r\n    tslib_1.__extends(B2cAuthority, _super);\r\n    function B2cAuthority(authority, validateAuthority, authorityMetadata) {\r\n        return _super.call(this, authority, validateAuthority, authorityMetadata) || this;\r\n    }\r\n    Object.defineProperty(B2cAuthority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return AuthorityType.B2C;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise with the TenantDiscoveryEndpoint\r\n     */\r\n    B2cAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function (telemetryManager, correlationId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!this.IsValidationEnabled || this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                    return [2 /*return*/, this.DefaultOpenIdConfigurationEndpoint];\r\n                }\r\n                throw ClientConfigurationError.createUntrustedAuthorityError();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    B2cAuthority.prototype.IsInTrustedHostList = function (host) {\r\n        if (this.IsValidationEnabled && !Object.keys(B2CTrustedHostList).length) {\r\n            throw ClientConfigurationError.createKnownAuthoritiesNotSetError();\r\n        }\r\n        return B2CTrustedHostList[host.toLowerCase()];\r\n    };\r\n    B2cAuthority.B2C_PREFIX = \"tfp\";\r\n    return B2cAuthority;\r\n}(Authority));\r\nexport { B2cAuthority };\r\n//# sourceMappingURL=B2cAuthority.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * @hidden\r\n */\r\nimport { AadAuthority } from \"./AadAuthority\";\r\nimport { B2cAuthority, B2CTrustedHostList } from \"./B2cAuthority\";\r\nimport { AuthorityType } from \"./Authority\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Use when Authority is B2C and validateAuthority is set to True to provide list of allowed domains.\r\n     */\r\n    AuthorityFactory.setKnownAuthorities = function (validateAuthority, knownAuthorities) {\r\n        if (validateAuthority && !Object.keys(B2CTrustedHostList).length) {\r\n            knownAuthorities.forEach(function (authority) {\r\n                B2CTrustedHostList[authority] = authority;\r\n            });\r\n        }\r\n    };\r\n    AuthorityFactory.saveMetadataFromNetwork = function (authorityInstance, telemetryManager, correlationId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var metadata;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, authorityInstance.resolveEndpointsAsync(telemetryManager, correlationId)];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        this.metadataMap.set(authorityInstance.CanonicalAuthority, metadata);\r\n                        return [2 /*return*/, metadata];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthorityFactory.getMetadata = function (authorityUrl) {\r\n        return this.metadataMap.get(authorityUrl);\r\n    };\r\n    AuthorityFactory.saveMetadataFromConfig = function (authorityUrl, authorityMetadataJson) {\r\n        try {\r\n            if (authorityMetadataJson) {\r\n                var parsedMetadata = JSON.parse(authorityMetadataJson);\r\n                if (!parsedMetadata.authorization_endpoint || !parsedMetadata.end_session_endpoint || !parsedMetadata.issuer) {\r\n                    throw ClientConfigurationError.createInvalidAuthorityMetadataError();\r\n                }\r\n                this.metadataMap.set(authorityUrl, {\r\n                    AuthorizationEndpoint: parsedMetadata.authorization_endpoint,\r\n                    EndSessionEndpoint: parsedMetadata.end_session_endpoint,\r\n                    Issuer: parsedMetadata.issuer\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createInvalidAuthorityMetadataError();\r\n        }\r\n    };\r\n    /**\r\n     * Parse the url and determine the type of authority\r\n     */\r\n    AuthorityFactory.detectAuthorityFromUrl = function (authorityUrl) {\r\n        authorityUrl = UrlUtils.CanonicalizeUri(authorityUrl);\r\n        var components = UrlUtils.GetUrlComponents(authorityUrl);\r\n        var pathSegments = components.PathSegments;\r\n        if (pathSegments[0] === \"adfs\") {\r\n            return AuthorityType.Adfs;\r\n        }\r\n        else if (Object.keys(B2CTrustedHostList).length) {\r\n            return AuthorityType.B2C;\r\n        }\r\n        // Defaults to Aad\r\n        return AuthorityType.Aad;\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.CreateInstance = function (authorityUrl, validateAuthority, authorityMetadata) {\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            return null;\r\n        }\r\n        if (authorityMetadata) {\r\n            // todo: log statements\r\n            this.saveMetadataFromConfig(authorityUrl, authorityMetadata);\r\n        }\r\n        var type = AuthorityFactory.detectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.B2C:\r\n                return new B2cAuthority(authorityUrl, validateAuthority, this.getMetadata(authorityUrl));\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, validateAuthority, this.getMetadata(authorityUrl));\r\n            default:\r\n                throw ClientConfigurationError.createInvalidAuthorityTypeError();\r\n        }\r\n    };\r\n    AuthorityFactory.metadataMap = new Map();\r\n    return AuthorityFactory;\r\n}());\r\nexport { AuthorityFactory };\r\n//# sourceMappingURL=AuthorityFactory.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { Constants } from \"./utils/Constants\";\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet() {\r\n    }\r\n    /**\r\n     * Check if there are dup scopes in a given request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker\r\n    ScopeSet.isIntersectingScopes = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(cachedScopes.slice());\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(scopes.slice());\r\n        for (var i = 0; i < requestScopes.length; i++) {\r\n            if (convertedCachedScopes.indexOf(requestScopes[i].toLowerCase()) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Check if a given scope is present in the request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    ScopeSet.containsScope = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(cachedScopes.slice());\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(scopes.slice());\r\n        return requestScopes.every(function (value) { return convertedCachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\r\n    };\r\n    /**\r\n     *  Trims and converts string to lower case\r\n     *\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.trimAndConvertToLowerCase = function (scope) {\r\n        return scope.trim().toLowerCase();\r\n    };\r\n    /**\r\n     * Performs trimeAndConvertToLowerCase on string array\r\n     * @param scopes\r\n     */\r\n    ScopeSet.trimAndConvertArrayToLowerCase = function (scopes) {\r\n        var _this = this;\r\n        return scopes.map(function (scope) { return _this.trimAndConvertToLowerCase(scope); });\r\n    };\r\n    /**\r\n     * remove one element from a scope array\r\n     *\r\n     * @param scopes\r\n     * @param scope\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.removeElement = function (scopes, scope) {\r\n        var scopeVal = this.trimAndConvertToLowerCase(scope);\r\n        return scopes.filter(function (value) { return value !== scopeVal; });\r\n    };\r\n    /**\r\n     * Parse the scopes into a formatted scopeList\r\n     * @param scopes\r\n     */\r\n    ScopeSet.parseScope = function (scopes) {\r\n        var scopeList = \"\";\r\n        if (scopes) {\r\n            for (var i = 0; i < scopes.length; ++i) {\r\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n            }\r\n        }\r\n        return scopeList;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     * @ignore\r\n     */\r\n    ScopeSet.validateInputScope = function (scopes, scopesRequired, clientId) {\r\n        if (!scopes) {\r\n            if (scopesRequired) {\r\n                throw ClientConfigurationError.createScopesRequiredError(scopes);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        // Check that scopes is an array object (also throws error if scopes == null)\r\n        if (!Array.isArray(scopes)) {\r\n            throw ClientConfigurationError.createScopesNonArrayError(scopes);\r\n        }\r\n        // Check that scopes is not an empty array\r\n        if (scopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(scopes.toString());\r\n        }\r\n        // Check that clientId is passed as single scope\r\n        if (scopes.indexOf(clientId) > -1) {\r\n            if (scopes.length > 1) {\r\n                throw ClientConfigurationError.createClientIdSingleScopeError(scopes.toString());\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts scope value from the state sent with the authentication request.\r\n     * @param {string} state\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ScopeSet.getScopeFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(Constants.resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Appends extraScopesToConsent if passed\r\n     * @param {@link AuthenticationParameters}\r\n     */\r\n    ScopeSet.appendScopes = function (reqScopes, reqExtraScopesToConsent) {\r\n        if (reqScopes) {\r\n            var convertedExtraScopes = reqExtraScopesToConsent ? this.trimAndConvertArrayToLowerCase(reqExtraScopesToConsent.slice()) : null;\r\n            var convertedReqScopes = this.trimAndConvertArrayToLowerCase(reqScopes.slice());\r\n            return convertedExtraScopes ? convertedReqScopes.concat(convertedExtraScopes) : convertedReqScopes;\r\n        }\r\n        return null;\r\n    };\r\n    return ScopeSet;\r\n}());\r\nexport { ScopeSet };\r\n//# sourceMappingURL=ScopeSet.js.map"],"sourceRoot":""}